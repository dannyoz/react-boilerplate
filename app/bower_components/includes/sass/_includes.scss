// Includes sass library
// Version 0.1.9alpha
// ------------------------------------------------------------------------
@charset "utf-8";


// Version 0.x has a compass css3 dependency
@import "compass/css3";

// Colour variables
// ------------------------------------------------------------------------

$col-primary    :  #289e83;
$col-secondary  :  #1b8898;
$col-warning    :  #d7861e;
$col-danger     :  #ac2828;
$col-success    :  #54A03A;
$col-turquoise  :  #289e83;

$col-pastel-red :  #e7534f;

// ------------------------------------------------------------------------

$bounce : cubic-bezier(.39,-0.35,.4,1.36);	


@function headingSize($size,$ceiling,$floor){

	$range    : $ceiling - $floor;
	$interval : $range / 6;

	@return $interval * $size + $floor; 
}

@function contrast($color,$ammount) {
	@if (lightness($color) > 50) {
	    @return darken($color,$ammount);
	} @else {
	    @return lighten($color,$ammount);
	}
}

// ------------------------------------------------------

/// Normalise Html elements and programtically computes heading sizes
/// @name normalise
/// @param {em} h1Size [2.5em] Size of H1 elements
/// @example scss - Include
///  @include normalise(3em);
///
/// @example css - Output
///  html, body, div, span, applet, object, iframe,
///  h1, h2, h3, h4, h5, h6, p, blockquote, pre,
///  a, abbr, acronym, address, big, cite, code,
///  del, dfn, em, img, ins, kbd, q, s, samp,
///  small, strike, strong, sub, sup, tt, var,
///  b, u, i, center,
///  dl, dt, dd, ol, ul, li,
///  fieldset, form, label, legend,
///  table, caption, tbody, tfoot, thead, tr, th, td,
///  article, aside, canvas, details, embed,
///  figure, figcaption, footer, header, hgroup,
///  menu, nav, output, ruby, section, summary,
///  time, mark, audio, video {
///    margin: 0;
///    padding: 0;
///    border: 0;
///    font: inherit;
///    font-size: 100%;
///    vertical-align: baseline;
///  }
///  
///  html {
///    line-height: 1;
///  }
///  
///  ol, ul {
///    list-style: none;
///  }
///  
///  table {
///    border-collapse: collapse;
///    border-spacing: 0;
///  }
///  
///  caption, th, td {
///    text-align: left;
///    font-weight: normal;
///    vertical-align: middle;
///  }
///  
///  q, blockquote {
///    quotes: none;
///  }
///  
///  q:before, q:after, blockquote:before, blockquote:after {
///    content: "";
///    content: none;
///  }
///  
///  a img {
///    border: none;
///  }
///  
///  article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
///    display: block;
///  }
///  
///  * {
///    -moz-box-sizing: border-box;
///    -webkit-box-sizing: border-box;
///    box-sizing: border-box;
///  }
///  
///  body {
///    font-family: "arial", sans-serif;
///    font-size: 18px;
///  }
///  
///  h1, h2, h3, h4, h5, h6, p, blockquote {
///    margin-bottom: 1.2em;
///  }
///  
///  h1 {
///    font-size: 3em;
///  }
///  
///  h2 {
///    font-size: 2.66667em;
///  }
///  
///  h3 {
///    font-size: 2.33333em;
///  }
///  
///  h4 {
///    font-size: 2em;
///  }
///  
///  h5 {
///    font-size: 1.66667em;
///  }
///  
///  h6 {
///    font-size: 1.33333em;
///  }
///  
///  p {
///    font-size: 1em;
///    line-height: 160%;
///  }
///  
///  blockquote {
///    font-size: 1.2em;
///  }
///  

@mixin normalise($h1Size:2.5em){

	html, body, div, span, applet, object, iframe,
	h1, h2, h3, h4, h5, h6, p, blockquote, pre,
	a, abbr, acronym, address, big, cite, code,
	del, dfn, em, img, ins, kbd, q, s, samp,
	small, strike, strong, sub, sup, tt, var,
	b, u, i, center,
	dl, dt, dd, ol, ul, li,
	fieldset, form, label, legend,
	table, caption, tbody, tfoot, thead, tr, th, td,
	article, aside, canvas, details, embed,
	figure, figcaption, footer, header, hgroup,
	menu, nav, output, ruby, section, summary,
	time, mark, audio, video {
		margin: 0;
		padding: 0;
		border: 0;
		font: inherit;
		font-size: 100%;
		vertical-align: baseline;
	}

	html {
	    line-height: 1;
	}

	ol, ul {
	    list-style: none;
	}

	table {
	    border-collapse: collapse;
	    border-spacing: 0;
	}

	caption, th, td {
	    text-align: left;
	    font-weight: normal;
	    vertical-align: middle;
	}

	q, blockquote {
	    quotes: none;
	}
	q:before, q:after, blockquote:before, blockquote:after {
	    content: "";
	    content: none;
	}

	a img {
	    border: none;
	}

	article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
	    display: block;
	}

	*{

		@include box-sizing(border-box);
	}

	body{

		font-family: "arial", sans-serif;
		font-size:18px;
	}

	h1,h2,h3,h4,h5,h6,p,blockquote{

		margin-bottom: 1.2em
	}

	h1{

	    font-size:headingSize(6,$h1Size,1em);
	}

	h2{

	    font-size:headingSize(5,$h1Size,1em);
	}

	h3{
	  
	    font-size:headingSize(4,$h1Size,1em);
	}

	h4{

	    font-size:headingSize(3,$h1Size,1em);
	}

	h5{

	    font-size:headingSize(2,$h1Size,1em);
	}

	h6{

	    font-size:headingSize(1,$h1Size,1em) 
	}

	p{

		font-size:1em;
		line-height:160%;
	}

	blockquote{

		font:{
			size:1.2em;
		}
	}
}


/// Mixin adding animation attributes
/// @name animation
/// @param {string} name  Animation name
/// @param {Option - string} timingFunction [ease] Easing
/// @param {Seconds} duration [1s] Duration of the animation
/// @param {Integer} stagger [0] Ammount of nth-child elements to stagger
/// @param {Seconds} delay [false] Delay in between staggers
/// @param {Integer} count [false] Animation iteration count
/// @example scss - Include
///  .fade-in{
////     @include animation(fadeIn,ease,0.5s,5);
///  }
/// @example css - Output
///  .fade-in {
///    -webkit-animation-name: fadeIn;
///    animation-name: fadeIn;
///    -webkit-animation-fill-mode: both;
///    animation-fill-mode: both;
///    -webkit-animation-timing-function: ease;
///    animation-timing-function: ease;
///    -webkit-animation-duration: 0.5s;
///    animation-duration: 0.5s;
///  }
///  .fade-in:nth-child(1) {
///    -webkit-animation-delay: 0.1s;
///    animation-delay: 0.1s;
///  }
///  .fade-in:nth-child(2) {
///    -webkit-animation-delay: 0.2s;
///    animation-delay: 0.2s;
///  }
///  .fade-in:nth-child(3) {
///    -webkit-animation-delay: 0.3s;
///    animation-delay: 0.3s;
///  }
///  .fade-in:nth-child(4) {
///    -webkit-animation-delay: 0.4s;
///    animation-delay: 0.4s;
///  }
///  .fade-in:nth-child(5) {
///    -webkit-animation-delay: 0.5s;
///    animation-delay: 0.5s;
///  }



@mixin animation($name, $timingFunction:ease, $duration:1s,$stagger:0,$delay:false, $count:false){
	-webkit-animation-name: $name;
	animation-name: $name;	
	-webkit-animation-fill-mode: both;
	animation-fill-mode: both;
	-webkit-animation-timing-function:$timingFunction;
	animation-timing-function:$timingFunction;
	-webkit-animation-duration: $duration;
	animation-duration: $duration;	
	@if $count {
		-webkit-animation-iteration-count: $count;
		animation-iteration-count: $count;
	}
	@if $stagger > 0{
		@if not $delay {
			$delay:0.1s;
		}
		@for $i from 1 through $stagger {
		    &:nth-child(#{$i}) {
		    	-webkit-animation-delay: $delay * $i;
		        animation-delay: $delay * $i;
		    }
		}
	} @else {
		@if $delay {
			-webkit-animation-delay: $delay;
			animation-delay: $delay;
		}
	}
}

// ------------------------------------------------------

/// Mixin for generating keyframes without transforms
/// @name keyframes
/// @param {String} name [] Animation name
/// @example scss - Include
///  @include keyframes (wibble){
///  	0%{
///  		top: 0px
///  	}
///  	33%{
///  		top: -5px
///  	}
///  	66%{
///  		top: 5px
///  	}
///  	100%{
///  		top: 0px
///  	}
///  }
/// @example css - Output
///  @-webkit-keyframes wibble {
///    0% {
///      top: 0px;
///    }
///    33% {
///      top: -5px;
///    }
///    66% {
///      top: 5px;
///    }
///    100% {
///      top: 0px;
///    }
///  }
///  @-moz-keyframes wibble {
///    0% {
///      top: 0px;
///    }
///    33% {
///      top: -5px;
///    }
///    66% {
///      top: 5px;
///    }
///    100% {
///      top: 0px;
///    }
///  }
///  @-o-keyframes wibble {
///    0% {
///      top: 0px;
///    }
///    33% {
///      top: -5px;
///    }
///    66% {
///      top: 5px;
///    }
///    100% {
///      top: 0px;
///    }
///  }
///  @keyframes wibble {
///    0% {
///      top: 0px;
///    }
///    33% {
///      top: -5px;
///    }
///    66% {
///      top: 5px;
///    }
///    100% {
///      top: 0px;
///    }
///  }
///

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

@mixin stops($vendor,$stopsObj,$opFade){

	@each $stop,$val in $stopsObj{
	
		#{$stop}{

			@if $opFade == "fadeIn"{
				@if $stop == 0%{opacity:0}
				@if $stop == 100%{opacity:1}
			}

			@if $opFade == "fadeOut"{
				@if $stop == 100%{opacity:0}
				@if $stop == 0%{opacity:1}
			}
			#{$vendor}transform:#{$val};
		}
	}
}

// ------------------------------------------------------

/// Mixin for generating transform based keyframe animations
/// @name transformKeyframes
/// @param {String} name  Animation name
/// @param {Sass map} stopsObj A key,val sass map of the stop positions
/// @param {String} opFade [fasle] Optional fade - "fadeIn" | "fadeOut"
/// @example scss - Include
///  $pulse-stops : (
///  	0% : "scale(1)",
///  	87% : "scale(1)",
///  	90% : "scale(0.8)",
///  	93% : "scale(1)",
///  	100% : "scale(1)"
///  );
///  
///  @include transformKeyframes(pulse,$pulse-stops);
///  
/// @example css - Output
///  @-webkit-keyframes pulse {
///    0% {
///      -webkit-transform: scale(1);
///    }
///    87% {
///      -webkit-transform: scale(1);
///    }
///    90% {
///      -webkit-transform: scale(0.8);
///    }
///    93% {
///      -webkit-transform: scale(1);
///    }
///    100% {
///      -webkit-transform: scale(1);
///    }
///  }
///  @-moz-keyframes pulse {
///    0% {
///      -moz-transform: scale(1);
///    }
///    87% {
///      -moz-transform: scale(1);
///    }
///    90% {
///      -moz-transform: scale(0.8);
///    }
///    93% {
///      -moz-transform: scale(1);
///    }
///    100% {
///      -moz-transform: scale(1);
///    }
///  }
///  @-o-keyframes pulse {
///    0% {
///      -o-transform: scale(1);
///    }
///    87% {
///      -o-transform: scale(1);
///    }
///    90% {
///      -o-transform: scale(0.8);
///    }
///    93% {
///      -o-transform: scale(1);
///    }
///    100% {
///      -o-transform: scale(1);
///    }
///  }
///  @keyframes pulse {
///    0% {
///      transform: scale(1);
///    }
///    87% {
///      transform: scale(1);
///    }
///    90% {
///      transform: scale(0.8);
///    }
///    93% {
///      transform: scale(1);
///    }
///    100% {
///      transform: scale(1);
///    }
///  }
///  

@mixin transformKeyframes ($animationName,$stopsObj,$opFade:false){

	@-webkit-keyframes #{$animationName} {
    	@include stops(-webkit-,$stopsObj,$opFade)
    }
    @-moz-keyframes #{$animationName} {
      	@include stops(-moz-,$stopsObj,$opFade)
    }
    @-o-keyframes #{$animationName} {
      	@include stops(-o-,$stopsObj,$opFade)
    }
    @keyframes #{$animationName} {
     	@include stops("",$stopsObj,$opFade)
    }
}

// ------------------------------------------------------

/// Predefined class and keyframes for a fade in animation
/// @name fadeIn
/// @param {String} easing [ease] Easing
/// @example scss - Include
////  @include fadeIn;
////  
/// @example css - Output
////  .fade-in {
////    -webkit-animation-name: fadeIn;
////    animation-name: fadeIn;
////    -webkit-animation-fill-mode: both;
////    animation-fill-mode: both;
////    -webkit-animation-timing-function: ease;
////    animation-timing-function: ease;
////    -webkit-animation-duration: 0.6s;
////    animation-duration: 0.6s;
////  }
////  .fade-in:nth-child(1) {
////    -webkit-animation-delay: 0.08s;
////    animation-delay: 0.08s;
////  }
////  .fade-in:nth-child(2) {
////    -webkit-animation-delay: 0.16s;
////    animation-delay: 0.16s;
////  }
////  .fade-in:nth-child(3) {
////    -webkit-animation-delay: 0.24s;
////    animation-delay: 0.24s;
////  }
////  .fade-in:nth-child(4) {
////    -webkit-animation-delay: 0.32s;
////    animation-delay: 0.32s;
////  }
////  .fade-in:nth-child(5) {
////    -webkit-animation-delay: 0.4s;
////    animation-delay: 0.4s;
////  }
////  
////  @-webkit-keyframes fadeIn {
////    0% {
////      opacity: 0;
////      -webkit-transform: scale(0.7);
////    }
////    100% {
////      opacity: 1;
////      -webkit-transform: scale(1);
////    }
////  }
////  @-moz-keyframes fadeIn {
////    0% {
////      opacity: 0;
////      -moz-transform: scale(0.7);
////    }
////    100% {
////      opacity: 1;
////      -moz-transform: scale(1);
////    }
////  }
////  @-o-keyframes fadeIn {
////    0% {
////      opacity: 0;
////      -o-transform: scale(0.7);
////    }
////    100% {
////      opacity: 1;
////      -o-transform: scale(1);
////    }
////  }
////  @keyframes fadeIn {
////    0% {
////      opacity: 0;
////      transform: scale(0.7);
////    }
////    100% {
////      opacity: 1;
////      transform: scale(1);
////    }
////  }
///
@mixin fadeIn($easing:ease) {

	.fade-in{

		@include animation(fadeIn,$easing,0.6s,5,0.08s);
	}

	$fadeIn-stops : (
		0% : "scale(0.7)",
		100% : "scale(1)"
	);

	@include transformKeyframes(fadeIn,$fadeIn-stops,"fadeIn");
}

// ------------------------------------------------------

/// Predefined class and keyframes for a slide in left animation
/// @name slideInLeft
/// @param {Integer} amount [100] Distance in pixels for the element to slide in
/// @param {String} easing [ease] Easing
/// @example scss - Include
///  $bounce : cubic-bezier(.39,-0.35,.4,1.36);	
///  @include slideInLeft(40,$bounce);
/// @example css - Output
///  .slide-in-left {
///    -webkit-animation-name: slideInLeft;
///    animation-name: slideInLeft;
///    -webkit-animation-fill-mode: both;
///    animation-fill-mode: both;
///    -webkit-animation-timing-function: cubic-bezier(0.39, -0.35, 0.4, 1.36);
///    animation-timing-function: cubic-bezier(0.39, -0.35, 0.4, 1.36);
///    -webkit-animation-duration: 0.6s;
///    animation-duration: 0.6s;
///  }
///  .slide-in-left:nth-child(1) {
///    -webkit-animation-delay: 0.08s;
///    animation-delay: 0.08s;
///  }
///  .slide-in-left:nth-child(2) {
///    -webkit-animation-delay: 0.16s;
///    animation-delay: 0.16s;
///  }
///  .slide-in-left:nth-child(3) {
///    -webkit-animation-delay: 0.24s;
///    animation-delay: 0.24s;
///  }
///  .slide-in-left:nth-child(4) {
///    -webkit-animation-delay: 0.32s;
///    animation-delay: 0.32s;
///  }
///  .slide-in-left:nth-child(5) {
///    -webkit-animation-delay: 0.4s;
///    animation-delay: 0.4s;
///  }
///  
///  @-webkit-keyframes slideInLeft {
///    0% {
///      opacity: 0;
///      -webkit-transform: translateX(-40px);
///    }
///    100% {
///      opacity: 1;
///      -webkit-transform: translateX(0);
///    }
///  }
///  @-moz-keyframes slideInLeft {
///    0% {
///      opacity: 0;
///      -moz-transform: translateX(-40px);
///    }
///    100% {
///      opacity: 1;
///      -moz-transform: translateX(0);
///    }
///  }
///  @-o-keyframes slideInLeft {
///    0% {
///      opacity: 0;
///      -o-transform: translateX(-40px);
///    }
///    100% {
///      opacity: 1;
///      -o-transform: translateX(0);
///    }
///  }
///  @keyframes slideInLeft {
///    0% {
///      opacity: 0;
///      transform: translateX(-40px);
///    }
///    100% {
///      opacity: 1;
///      transform: translateX(0);
///    }
///  }
///  

@mixin slideInLeft($amount:100,$easing:ease) {

	.slide-in-left{

		@include animation(slideInLeft,$easing,0.6s,5,0.08s);
	}

	$slideInLeft-stops : (
		0% : "translateX(-#{$amount}px)",
		100% : "translateX(0)"
	);

	@include transformKeyframes(slideInLeft,$slideInLeft-stops,"fadeIn");
}

// ------------------------------------------------------

/// Predefined class and keyframes for a slide in right animation
/// @name slideInRight
/// @param {Integer} amount [100] Distance in pixels for the element to slide in
/// @param {String} easing [ease] Easing
/// @example scss - Include
///  $bounce : cubic-bezier(.39,-0.35,.4,1.36);	
///  @include slideInRight(60,$bounce);
/// @example css - Output
///  .slide-in-right {
///    -webkit-animation-name: slideInRight;
///    animation-name: slideInRight;
///    -webkit-animation-fill-mode: both;
///    animation-fill-mode: both;
///    -webkit-animation-timing-function: cubic-bezier(0.39, -0.35, 0.4, 1.36);
///    animation-timing-function: cubic-bezier(0.39, -0.35, 0.4, 1.36);
///    -webkit-animation-duration: 0.6s;
///    animation-duration: 0.6s;
///  }
///  .slide-in-right:nth-child(1) {
///    -webkit-animation-delay: 0.08s;
///    animation-delay: 0.08s;
///  }
///  .slide-in-right:nth-child(2) {
///    -webkit-animation-delay: 0.16s;
///    animation-delay: 0.16s;
///  }
///  .slide-in-right:nth-child(3) {
///    -webkit-animation-delay: 0.24s;
///    animation-delay: 0.24s;
///  }
///  .slide-in-right:nth-child(4) {
///    -webkit-animation-delay: 0.32s;
///    animation-delay: 0.32s;
///  }
///  .slide-in-right:nth-child(5) {
///    -webkit-animation-delay: 0.4s;
///    animation-delay: 0.4s;
///  }
///  
///  @-webkit-keyframes slideInRight {
///    0% {
///      opacity: 0;
///      -webkit-transform: translateX(60px);
///    }
///    100% {
///      opacity: 1;
///      -webkit-transform: translateX(0);
///    }
///  }
///  @-moz-keyframes slideInRight {
///    0% {
///      opacity: 0;
///      -moz-transform: translateX(60px);
///    }
///    100% {
///      opacity: 1;
///      -moz-transform: translateX(0);
///    }
///  }
///  @-o-keyframes slideInRight {
///    0% {
///      opacity: 0;
///      -o-transform: translateX(60px);
///    }
///    100% {
///      opacity: 1;
///      -o-transform: translateX(0);
///    }
///  }
///  @keyframes slideInRight {
///    0% {
///      opacity: 0;
///      transform: translateX(60px);
///    }
///    100% {
///      opacity: 1;
///      transform: translateX(0);
///    }
///  }
///  

@mixin slideInRight($amount:100,$easing:ease) {

	.slide-in-right{

		@include animation(slideInRight,$easing,0.6s,5,0.08s);
	}

	$slideInRight-stops : (
		0% : "translateX(#{$amount}px)",
		100% : "translateX(0)"
	);

	@include transformKeyframes(slideInRight,$slideInRight-stops,"fadeIn");
}

// ------------------------------------------------------

/// Predefined class and keyframes for a slide in up animation
/// @name slideInUp
/// @param {Integer} amount [100] Distance in pixels for the element to slide in
/// @param {String} easing [ease] Easing
/// @example scss - Include
///  $bounce : cubic-bezier(.39,-0.35,.4,1.36);	
///  @include slideInUp(60,$bounce);
/// @example css - Output
///  .slide-in-up {
///    -webkit-animation-name: slideInUp;
///    animation-name: slideInUp;
///    -webkit-animation-fill-mode: both;
///    animation-fill-mode: both;
///    -webkit-animation-timing-function: cubic-bezier(0.39, -0.35, 0.4, 1.36);
///    animation-timing-function: cubic-bezier(0.39, -0.35, 0.4, 1.36);
///    -webkit-animation-duration: 0.6s;
///    animation-duration: 0.6s;
///  }
///  .slide-in-up:nth-child(1) {
///    -webkit-animation-delay: 0.08s;
///    animation-delay: 0.08s;
///  }
///  .slide-in-up:nth-child(2) {
///    -webkit-animation-delay: 0.16s;
///    animation-delay: 0.16s;
///  }
///  .slide-in-up:nth-child(3) {
///    -webkit-animation-delay: 0.24s;
///    animation-delay: 0.24s;
///  }
///  .slide-in-up:nth-child(4) {
///    -webkit-animation-delay: 0.32s;
///    animation-delay: 0.32s;
///  }
///  .slide-in-up:nth-child(5) {
///    -webkit-animation-delay: 0.4s;
///    animation-delay: 0.4s;
///  }
///  
///  @-webkit-keyframes slideInUp {
///    0% {
///      opacity: 0;
///      -webkit-transform: translateY(60px);
///    }
///    100% {
///      opacity: 1;
///      -webkit-transform: translateY(0);
///    }
///  }
///  @-moz-keyframes slideInUp {
///    0% {
///      opacity: 0;
///      -moz-transform: translateY(60px);
///    }
///    100% {
///      opacity: 1;
///      -moz-transform: translateY(0);
///    }
///  }
///  @-o-keyframes slideInUp {
///    0% {
///      opacity: 0;
///      -o-transform: translateY(60px);
///    }
///    100% {
///      opacity: 1;
///      -o-transform: translateY(0);
///    }
///  }
///  @keyframes slideInUp {
///    0% {
///     opacity: 0;
///      transform: translateY(60px);
///    }
///    100% {
///      opacity: 1;
///      transform: translateY(0);
///    }
///  }
///  

@mixin slideInUp($amount:100,$easing:ease) {

	.slide-in-up{

		@include animation(slideInUp,$easing,0.6s,5,0.08s);
	}

	$slideInUp-stops : (
		0% : "translateY(#{$amount}px)",
		100% : "translateY(0)"
	);

	@include transformKeyframes(slideInUp,$slideInUp-stops,"fadeIn");
}

// ------------------------------------------------------

/// Predefined class and keyframes for a slide in down animation
/// @name slideInDown
/// @param {Integer} amount [100] Distance in pixels for the element to slide in
/// @param {String} easing [ease] Easing
/// @example scss - Include
///  $bounce : cubic-bezier(.39,-0.35,.4,1.36);	
///  @include slideInDown(30,$bounce);
/// @example css - Output
///  .slide-in-down {
///    -webkit-animation-name: slideInDown;
///    animation-name: slideInDown;
///    -webkit-animation-fill-mode: both;
///    animation-fill-mode: both;
///    -webkit-animation-timing-function: cubic-bezier(0.39, -0.35, 0.4, 1.36);
///    animation-timing-function: cubic-bezier(0.39, -0.35, 0.4, 1.36);
///    -webkit-animation-duration: 0.6s;
///    animation-duration: 0.6s;
///  }
///  .slide-in-down:nth-child(1) {
///    -webkit-animation-delay: 0.08s;
///    animation-delay: 0.08s;
///  }
///  .slide-in-down:nth-child(2) {
///    -webkit-animation-delay: 0.16s;
///    animation-delay: 0.16s;
///  }
///  .slide-in-down:nth-child(3) {
///    -webkit-animation-delay: 0.24s;
///    animation-delay: 0.24s;
///  }
///  .slide-in-down:nth-child(4) {
///    -webkit-animation-delay: 0.32s;
///    animation-delay: 0.32s;
///  }
///  .slide-in-down:nth-child(5) {
///    -webkit-animation-delay: 0.4s;
///    animation-delay: 0.4s;
///  }
///  
///  @-webkit-keyframes slideInDown {
///    0% {
///      opacity: 0;
///      -webkit-transform: translateY(-30px);
///    }
///    100% {
///      opacity: 1;
///      -webkit-transform: translateY(0);
///    }
///  }
///  @-moz-keyframes slideInDown {
///    0% {
///      opacity: 0;
///      -moz-transform: translateY(-30px);
///    }
///    100% {
///      opacity: 1;
///      -moz-transform: translateY(0);
///    }
///  }
///  @-o-keyframes slideInDown {
///    0% {
///      opacity: 0;
///      -o-transform: translateY(-30px);
///    }
///    100% {
///      opacity: 1;
///      -o-transform: translateY(0);
///    }
///  }
///  @keyframes slideInDown {
///    0% {
///      opacity: 0;
///      transform: translateY(-30px);
///    }
///    100% {
///      opacity: 1;
///      transform: translateY(0);
///    }
///  }
///  

@mixin slideInDown($amount:100,$easing:ease) {

	.slide-in-down{

		@include animation(slideInDown,$easing,0.6s,5,0.08s);
	}

	$slideInDown-stops : (
		0% : "translateY(-#{$amount}px)",
		100% : "translateY(0)"
	);

	@include transformKeyframes(slideInDown,$slideInDown-stops,"fadeIn");
}

// ------------------------------------------------------

/// Predefined class and keyframes for a slide in up animation
/// @name rotateIn
/// @param {Integer} degrees [100] Degrees to start from negative values supported
/// @param {String} easing [ease] Easing
/// @example scss - Include
///  $bounce : cubic-bezier(.39,-0.35,.4,1.36);	
///  @include rotateIn(-30,$bounce);
/// @example css - Output
///  .rotate-in {
///    -webkit-animation-name: rotateIn;
///    animation-name: rotateIn;
///    -webkit-animation-fill-mode: both;
///    animation-fill-mode: both;
///    -webkit-animation-timing-function: cubic-bezier(0.39, -0.35, 0.4, 1.36);
///    animation-timing-function: cubic-bezier(0.39, -0.35, 0.4, 1.36);
///    -webkit-animation-duration: 0.6s;
///    animation-duration: 0.6s;
///  }
///  .rotate-in:nth-child(1) {
///    -webkit-animation-delay: 0.08s;
///    animation-delay: 0.08s;
///  }
///  .rotate-in:nth-child(2) {
///    -webkit-animation-delay: 0.16s;
///    animation-delay: 0.16s;
///  }
///  .rotate-in:nth-child(3) {
///    -webkit-animation-delay: 0.24s;
///    animation-delay: 0.24s;
///  }
///  .rotate-in:nth-child(4) {
///    -webkit-animation-delay: 0.32s;
///    animation-delay: 0.32s;
///  }
///  .rotate-in:nth-child(5) {
///    -webkit-animation-delay: 0.4s;
///    animation-delay: 0.4s;
///  }
///  
///  @-webkit-keyframes rotateIn {
///    0% {
///      opacity: 0;
///      -webkit-transform: rotate(-30deg) translateX(-100px);
///    }
///    100% {
///      opacity: 1;
///      -webkit-transform: rotate(0deg) translateX();
///    }
///  }
///  @-moz-keyframes rotateIn {
///    0% {
///      opacity: 0;
///      -moz-transform: rotate(-30deg) translateX(-100px);
///    }
///    100% {
///      opacity: 1;
///      -moz-transform: rotate(0deg) translateX();
///    }
///  }
///  @-o-keyframes rotateIn {
///    0% {
///      opacity: 0;
///      -o-transform: rotate(-30deg) translateX(-100px);
///    }
///    100% {
///      opacity: 1;
///      -o-transform: rotate(0deg) translateX();
///    }
///  }
///  @keyframes rotateIn {
///    0% {
///      opacity: 0;
///      transform: rotate(-30deg) translateX(-100px);
///    }
///    100% {
///      opacity: 1;
///      transform: rotate(0deg) translateX();
///    }
///  }
///  

@mixin rotateIn($amount:-20,$easing:ease) {

	.rotate-in{

		@include animation(rotateIn,$easing,0.6s,5,0.08s);
	}

	$rotateIn-stops : (
		0% : "rotate(#{$amount}deg) translateX(-100px)",
		100% : "rotate(0deg) translateX()"
	);

	@include transformKeyframes(rotateIn,$rotateIn-stops,"fadeIn");
}

// ------------------------------------------------------

/// Predefined class and keyframes for a looping pulse animation
/// @name pulse
/// @param {String} easing [ease] Easing
/// @example scss - Include
///  @include pulse;
/// @example css - Output
///  .pulse {
///    -webkit-animation-name: pulse;
///    animation-name: pulse;
///    -webkit-animation-fill-mode: both;
///    animation-fill-mode: both;
///    -webkit-animation-timing-function: ease;
///    animation-timing-function: ease;
///    -webkit-animation-duration: 3s;
///    animation-duration: 3s;
///    -webkit-animation-iteration-count: infinite;
///    animation-iteration-count: infinite;
///  }
///  
///  @-webkit-keyframes pulse {
///    0% {
///      -webkit-transform: scale(1);
///    }
///    87% {
///      -webkit-transform: scale(1);
///    }
///    90% {
///      -webkit-transform: scale(0.8);
///    }
///    93% {
///      -webkit-transform: scale(1);
///    }
///    100% {
///      -webkit-transform: scale(1);
///    }
///  }
///  @-moz-keyframes pulse {
///    0% {
///      -moz-transform: scale(1);
///    }
///    87% {
///      -moz-transform: scale(1);
///    }
///    90% {
///      -moz-transform: scale(0.8);
///    }
///    93% {
///      -moz-transform: scale(1);
///    }
///    100% {
///      -moz-transform: scale(1);
///    }
///  }
///  @-o-keyframes pulse {
///    0% {
///      -o-transform: scale(1);
///    }
///    87% {
///      -o-transform: scale(1);
///    }
///    90% {
///      -o-transform: scale(0.8);
///    }
///    93% {
///      -o-transform: scale(1);
///    }
///    100% {
///      -o-transform: scale(1);
///    }
///  }
///  @keyframes pulse {
///    0% {
///      transform: scale(1);
///    }
///    87% {
///      transform: scale(1);
///    }
///    90% {
///      transform: scale(0.8);
///    }
///    93% {
///      transform: scale(1);
///    }
///    100% {
///      transform: scale(1);
///    }
///  }

@mixin pulse($easing:ease) {

	.pulse{

		@include animation(pulse,$easing,3s,0,false,infinite);
	}

	$pulse-stops : (
		0% : "scale(1)",
		87% : "scale(1)",
		90% : "scale(0.8)",
		93% : "scale(1)",
		100% : "scale(1)"
	);

	@include transformKeyframes(pulse,$pulse-stops);
}
// =========================================================================================================================
//
// BUTTONS
// ------------------------------------------------------


/// Include this to normalise button elements. The mixin will add a ".button"
/// class to allow for easy styling on submit inputs or anchor tags. ".large"
/// and ".small" classes are included for sizing options. Use the ".right" class
/// to align the button to the right. 
/// @name button
/// @param {Integer} rounding [5] Border radius rounding value in pixels
/// @example scss - Include
///  @include button(7);
///
/// @example css - Output
///  button, .button {
///    display: inline-block;
///    outline: none;
///    padding: 10px 20px;
///    margin-bottom: 10px;
///    cursor: pointer;
///    color: #333;
///    background-color: #f3f3f3;
///    border-top: 1px solid #bbb;
///    border-left: 1px solid #bbb;
///    border-right: 1px solid #bbb;
///    border-bottom: 4px solid #bbb;
///    font-size: 0.9em;
///    font-weight: 600;
///    border-radius: 7px;
///  }
///  button:hover, .button:hover, button:focus, .button:focus {
///    background-color: #ddd;
///  }
///  button [class^="icon-"], .button [class^="icon-"], button [class*=" icon-"], .button [class*=" icon-"] {
///    line-height: 0;
///    position: relative;
///    margin-right: 8px;
///  }
///  button.large, .large.button {
///    padding: 15px 30px;
///    font-size: 1.2em;
///  }
///  button.large [class^="icon-"], .large.button [class^="icon-"], button.large [class*=" icon-"], .large.button [class*=" icon-"] {
///    font-size: 1.6em;
///    top: 5px;
///    left: -10px;
///  }
///  button.small, .small.button {
///    padding: 5px 10px;
///    font-size: 0.8em;
///  }
///  button.small [class^="icon-"], .small.button [class^="icon-"], button.small [class*=" icon-"], .small.button [class*=" icon-"] {
///    margin-right: 5px;
///  }
///  button.right, .right.button {
///    float: right;
///  }
///
/// @example markup - html 
///  <button>
///  	Example button
///  </button>
///  
///  <input class="button" type="submit" value="Submit button" />
///  
///  <a class="button">Anchor tag</a>
///  
///  <button class="large">
///  	Large
///  </button>
///  
///  <button class="small">
///  	Small
///  </button>  
///  
@mixin button($rounding:5){
		
	button {

		display: inline-block; 			
		outline:none;
		padding: 10px 20px;
		margin-bottom: 10px;
		cursor: pointer;
		color: #333;
		background-color:#f3f3f3;
		border-top:1px solid #bbb;
		border-left:1px solid #bbb;
		border-right:1px solid #bbb;
		border-bottom:4px solid #bbb;
		font:{
			size:0.9em;
			weight:600;
		}

		@if $rounding > 0{

			border-radius:#{$rounding}px;
		}

		&:hover, &:focus{

			background-color:#ddd;
		}

		[class^="icon-"], [class*=" icon-"]{

			line-height: 0;
			position: relative;
			margin-right:8px;
		}

		&.large{

			padding: 15px 30px;
			font:{
				size:1.2em;
			}

			[class^="icon-"], [class*=" icon-"]{

				font-size: 1.6em;
				
				top:5px;
				left:-10px;
				
			}
		}

		&.small{

			padding: 5px 10px;
			font:{
				size:0.8em;
			}

			[class^="icon-"], [class*=" icon-"]{
				
				margin-right:5px;
			}
		}

		&.right{

			float: right;
		}
	}

	.button{

		@extend button;
	}
}

// ------------------------------------------------------

/// Mixin for theming buttons
/// @name themeButton
/// @param {String} classname [primary] Class name for the element
/// @param {#hex/rgba} bgcol [#d73f2b] Background colour of the button
/// @param {#hex/rgba} opt-colour [false] Overides the text colour
/// @param {Bool} gradient [false] Overrides background colour with gradient effect
/// @example scss - Include
///  @include themeButton('primary',#289e83);
///
/// @example css - Output
///  button.primary, .primary.button {
///    color: #a9e9da;
///    border-color: #1e7561;
///    background-color: #289e83;
///  }
///  button.primary:hover, .primary.button:hover, button.primary:focus, .primary.button:focus {
///    background-color: #1e7561;
///    border-color: #134d40;
///  }
///
/// @example markup - HTML
///  <button class="primary">
///  	Primary
///  </button>
///  
///  <button class="secondary">
///  	Secondary
///  </button>
///  
///  <button class="warning">
///  	Warning
///  </button>
///  
///  <button class="danger">
///  	Danger
///  </button>
///  
///  <button class="submit">
///  	Submit
///  </button>
///  
@mixin themeButton($className:"primary",$bgcol:#d73f2b,$opt-colour:false,$gradient:false){

	button.#{$className}{

		@extend button;

		@if $opt-colour{
			color: $opt-colour;
		}
		@if $opt-colour == false{
			color: lighten($bgcol,40%);
		}
		border-color: darken($bgcol,10%);

		@if $gradient == false {
			background-color:$bgcol;
		}

		@if $gradient == true {

			@include background-image(linear-gradient(lighten($bgcol,7%),darken($bgcol,7%)));
			border-color: darken($bgcol,7%);
		}

		&:hover, &:focus{

			@if $gradient == false {
				background-color:darken($bgcol,10%);
				border-color: darken($bgcol,20%);
			}

			@if $gradient == true {
				@include background-image(linear-gradient($bgcol,darken($bgcol,7%)));
				border-color: darken($bgcol,7%);
			}
		}

	}
}

// =========================================================================================================================
//
// CARDS
// ------------------------------------------------------


/// Mixin for generating a card class
/// @name cardClass
/// @param {css pixel shorthand} padding [20px] Padding value applied to .card-body
/// @param {Integer} rounding [0] Border radius in pixels
/// @example scss - Include
///  @include cardClass(20px,5);
///
/// @example css - Output
/// .card {
///   font-size: 0.95em;
///   overflow: hidden;
///   border-radius:5px;
/// }
/// .card .card-body h1, .card .card-body h2, .card .card-body h3, .card .card-body h4, .card .card-body h5, .card .card-body h6, .card header h1, .card header h2, .card header h3, .card header h4, .card header h5, .card header h6 {
///   font-size: 1.4em;
///   margin-bottom: 0.7em;
/// }
/// .card .card-body h1:last-child, .card .card-body h2:last-child, .card .card-body h3:last-child, .card .card-body h4:last-child, .card .card-body h5:last-child, .card .card-body h6:last-child, .card .card-body p:last-child, .card header h1:last-child, .card header h2:last-child, .card header h3:last-child, .card header h4:last-child, .card header h5:last-child, .card header h6:last-child, .card header p:last-child {
///   margin-bottom: 0;
/// }
/// .card .card-body, .card header {
///   padding: 20px;
/// }
/// .card footer {
///   padding: 0 10px;
/// }
/// .card footer h1, .card footer h2, .card footer h3, .card footer h4, .card footer h5, .card footer h6, .card footer p, .card footer a {
///   font-size: 1em;
///   display: inline-block;
///   padding: 10px;
/// }
/// .card footer h1:first-child, .card footer h2:first-child, .card footer h3:first-child, .card footer h4:first-child, .card footer h5:first-child, .card footer h6:first-child, .card footer p:first-child, .card footer a:first-child {
///   padding-left: 0;
/// }
/// .card footer button {
///   margin-top: 5px;
///   margin-bottom: 5px;
///   margin-left: 5px;
/// }
///

@mixin cardClass($padding:20px,$rounding:0){

	.card{

		font-size: 0.95em;

		@if $rounding > 0{

			overflow: hidden;
			border-radius: #{$rounding}px;
		}

		.card-body,header{

			h1,h2,h3,h4,h5,h6{

				font-size: 1.4em;
				margin-bottom: 0.7em;
			}

			h1,h2,h3,h4,h5,h6,p{

				&:last-child{

					margin-bottom: 0;
				}

			}
		}

		.card-body, header{
			padding:$padding;
		}

		footer{

			padding:0 $padding/2;

			h1,h2,h3,h4,h5,h6,p, a{

				font-size: 1em;
				display: inline-block;
				padding:$padding/2;

				&:first-child{

					padding-left: 0;
				}
			}

			button{
				
				margin-top: $padding/4;
				margin-bottom: $padding/4;
				margin-left:5px;
			}
		}
	}
}


/// Mixin for theming card classes
/// @name themeCardClass
/// @param {#hex/rgba} blockColour [#f4f4f4] Card background colour
/// @param {#hex/rgba} borderColour [false] Applies border colours if passed
/// @param {Bool} headerStyle [false] Applies stylised heading if passed
/// @example scss - Include
///  @include themeCardClass(#f6f6f6,#ddd,true);
///
/// @example css - Output
///  .card{
///    background-color: #f6f6f6;
///    border: 1px solid #ddd;
///  }
///  .card header{
///    background-color: #eeeeee;
///    border-bottom: 1px solid #ddd;
///  }
///  .card header h1 {
///    padding-left: 10px;
///    border-left: 3px solid #289e83;
///  }
///  .card footer{
///    background-color: #eeeeee;
///    border-top: 1px solid #ddd;
///  }
///  .card footer a {
///    border-right: 1px solid #ddd;	
///  }
///

@mixin themeCardClass($blockColour:#f4f4f4,$borderColour:false,$headerStyle:false){

	.card{
		
		background-color: $blockColour;

		@if $borderColour{
			border: 1px solid $borderColour;
		}

		header{

			background-color:darken($blockColour,3%);

			@if $borderColour{
				border-bottom: 1px solid $borderColour;
			}

			@if $headerStyle{

				h1,h2,h3,h4,h5,h6{

					padding-left:10px;
					border-left: 3px solid $headerStyle;
				}
			}
		}

		footer{

			background-color:darken($blockColour,3%);

			@if $borderColour{
				border-top: 1px solid $borderColour;

				a{

					border-right: 1px solid $borderColour;
				}

			}
		}
	}
}

// =========================================================================================================================
//
// FONTS
// ------------------------------------------------------


// Currently availble google fonts :
// open-sans
// open-sans-condensed
// roboto
// roboto-slab
// leckerli-one
// Quicksand
// Oswald
// Source sans

$googleFonts : (
	open-sans : (
		font-family: 'Open Sans',
		weights : (
			400 : (
				localone : 'Open Sans',
				localtwo : 'OpenSans',
				url : 'url(http://themes.googleusercontent.com/static/fonts/opensans/v8/cJZKeOuBrn4kERxqtaUH3T8E0i7KZn-EPnyo3HZu7kw.woff)' 
			),
			600 : (
				localone : 'Open Sans Semibold',
				localtwo : 'OpenSans-Semibold',
				url : 'url(http://themes.googleusercontent.com/static/fonts/opensans/v8/MTP_ySUJH_bn48VBG8sNSnhCUOGz7vYGh680lGh-uXM.woff)' 
			),
			800 : (
				localone : 'Open Sans Extrabold',
				localtwo : 'OpenSans-Extrabold',
				url : 'url(http://themes.googleusercontent.com/static/fonts/opensans/v8/EInbV5DfGHOiMmvb1Xr-hnhCUOGz7vYGh680lGh-uXM.woff)' 
			)
		)
	),
	open-sans-condensed : (
		font-family: 'Open Sans Condensed',
		weights : (
			300 : (
				localone : 'Open Sans Cond Light',
				localtwo : 'OpenSans-CondensedLight',
				url : 'url(http://themes.googleusercontent.com/static/fonts/opensanscondensed/v7/gk5FxslNkTTHtojXrkp-xF1YPouZEKgzpqZW9wN-3Ek.woff)' 
			),
			700 : (
				localone : 'Open Sans Condensed Bold',
				localtwo : 'OpenSans-CondensedBold',
				url : 'url(http://themes.googleusercontent.com/static/fonts/opensanscondensed/v7/gk5FxslNkTTHtojXrkp-xONSK5BxN3NFS4EJkViHIqo.woff)' 
			)
		)
	),
	roboto : (
		font-family: 'Roboto',
		weights : (
			300 : (
				localone : 'Roboto Light',
				localtwo : 'Roboto-Light',
				url : 'url(http://themes.googleusercontent.com/static/fonts/roboto/v11/Hgo13k-tfSpn0qi1SFdUfT8E0i7KZn-EPnyo3HZu7kw.woff)' 
			),
			400 : (
				localone : 'Roboto Regular',
				localtwo : 'Roboto-Regular',
				url : 'url(http://themes.googleusercontent.com/static/fonts/roboto/v11/2UX7WLTfW3W8TclTUvlFyQ.woff)' 
			),
			700 : (
				localone : 'Roboto Bold',
				localtwo : 'Roboto-Bold',
				url : 'url(http://themes.googleusercontent.com/static/fonts/roboto/v11/d-6IYplOFocCacKzxwXSOD8E0i7KZn-EPnyo3HZu7kw.woff)' 
			)
		)
	),
	roboto-slab : (
		font-family: 'Roboto Slab',
		weights : (
			300 : (
				localone : 'Roboto Slab Light',
				localtwo : 'RobotoSlab-Light',
				url : 'url(http://themes.googleusercontent.com/static/fonts/robotoslab/v3/dazS1PrQQuCxC3iOAJFEJR_xHqYgAV9Bl_ZQbYUxnQU.woff)' 
			),
			400 : (
				localone : 'Roboto Slab Regular',
				localtwo : 'RobotoSlab-Regular',
				url : 'url(http://themes.googleusercontent.com/static/fonts/robotoslab/v3/y7lebkjgREBJK96VQi37ZobN6UDyHWBl620a-IRfuBk.woff)' 
			),
			700 : (
				localone : 'Roboto Slab Bold',
				localtwo : 'RobotoSlab-Bold',
				url : 'url(http://themes.googleusercontent.com/static/fonts/robotoslab/v3/dazS1PrQQuCxC3iOAJFEJTqR_3kx9_hJXbbyU8S6IN0.woff)' 
			)
		)

	),
	quicksand : (
		font-family: '"Quicksand"',
		weights : (
			300 : (
				localone : 'Quicksand Light',
				localtwo : 'Quicksand-Light',
				url : 'url(http://fonts.gstatic.com/s/quicksand/v5/qhfoJiLu10kFjChCCTvGlOgdm0LZdjqr5-oayXSOefg.woff2)' 
			),
			400 : (
				localone : 'Quicksand Regular',
				localtwo : 'Quicksand-Regular',
				url : 'url(http://fonts.gstatic.com/s/quicksand/v5/sKd0EMYPAh5PYCRKSryvW1tXRa8TVwTICgirnJhmVJw.woff2)' 
			),
			700 : (
				localone : 'Quicksand Bold',
				localtwo : 'Quicksand-Bold',
				url : 'url(http://fonts.gstatic.com/s/quicksand/v5/32nyIRHyCu6iqEka_hbKsugdm0LZdjqr5-oayXSOefg.woff2)' 
			)
		)
	),
	leckerli-one : (
		font-family: '"Leckerli One"',
		weights : (
			300 : (
				localone : 'Leckerli One',
				localtwo : 'LeckerliOne-Regular',
				url : 'url(http://fonts.gstatic.com/s/leckerlione/v7/S2Y_iLrItTu8kIJTkS7DrOgdm0LZdjqr5-oayXSOefg.woff2)' 
			)
		)
	),
	oswald : (
		font-family: '"Oswald"',
		weights : (
			300 : (
				localone : 'Oswald Light',
				localtwo : 'Oswald-Light',
				url : 'url(http://fonts.gstatic.com/s/oswald/v10/HqHm7BVC_nzzTui2lzQTDVtXRa8TVwTICgirnJhmVJw.woff2)' 
			),
			400 : (
				localone : 'Oswald Regular',
				localtwo : 'Oswald-Regular',
				url : 'url(http://fonts.gstatic.com/s/oswald/v10/pEobIV_lL25TKBpqVI_a2w.woff2)' 
			),
			700 : (
				localone : 'Oswald Bold',
				localtwo : 'Oswald-Bold',
				url : 'url(http://fonts.gstatic.com/s/oswald/v10/bH7276GfdCjMjApa_dkG6VtXRa8TVwTICgirnJhmVJw.woff2)' 
			)
		)
	),
	source-sans : (
		font-family: 'Source Sans Pro',
		weights : (
			200 : (
				localone : 'Source Sans Pro ExtraLight',
				localtwo : 'SourceSansPro-ExtraLight',
				url : 'url(http://fonts.gstatic.com/s/sourcesanspro/v9/toadOcfmlt9b38dHJxOBGCVh0V6fR69OLaFLklYbiSk.woff2)' 
			),
			300 : (
				localone : 'Source Sans Pro Light',
				localtwo : 'SourceSansPro-Light',
				url : 'url(http://fonts.gstatic.com/s/sourcesanspro/v9/toadOcfmlt9b38dHJxOBGOode0-EuMkY--TSyExeINg.woff2)' 
			),
			400 : (
				localone : 'Source Sans Pro',
				localtwo : 'SourceSansPro-Regular',
				url : 'url(http://fonts.gstatic.com/s/sourcesanspro/v9/ODelI1aHBYDBqgeIAH2zlNV_2ngZ8dMf8fLgjYEouxg.woff2)' 
			),
			600 : (
				localone : 'Source Sans Pro Semibold',
				localtwo : 'SourceSansPro-Semibold',
				url : 'url(http://fonts.gstatic.com/s/sourcesanspro/v9/toadOcfmlt9b38dHJxOBGCOFnW3Jk0f09zW_Yln67Ac.woff2)'
			),
			700 : (
				localone : 'Source Sans Pro Bold',
				localtwo : 'SourceSansPro-Bold',
				url : 'url(http://fonts.gstatic.com/s/sourcesanspro/v9/toadOcfmlt9b38dHJxOBGEo0As1BFRXtCDhS66znb_k.woff2)'
			)
		)
	)
);

/// Google web fonts can be added to elements really easily using this mixin.
/// @name googleFont
/// @param {String} font [] The name of the google font to include e.g. 'open-sans'
/// @param {Array} elements [false] List of elements to extend with the font-family
/// @param {Integer} weight [fasle] optional weight of the fonts e.g. 300 | 400 | 700
/// @example scss - Include
///  @include googleFont('quicksand',h1 h2 h3 h4 h5 h6,400);
///  @include googleFont('roboto-slab',body textarea button);
/// @example css - Output
///  @font-face {
///    font-family: "Quicksand";
///    font-style: normal;
///    font-weight: 300;
///    src: local(Quicksand Light), local(Quicksand-Light), url(http://fonts.gstatic.com/s/quicksand/v5/qhfoJiLu10kFjChCCTvGlOgdm0LZdjqr5-oayXSOefg.woff2) format("woff2");
///    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
///  }
///  @font-face {
///    font-family: "Quicksand";
///    font-style: normal;
///    font-weight: 400;
///    src: local(Quicksand Regular), local(Quicksand-Regular), url(http://fonts.gstatic.com/s/quicksand/v5/sKd0EMYPAh5PYCRKSryvW1tXRa8TVwTICgirnJhmVJw.woff2) format("woff2");
///    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
///  }
///  @font-face {
///    font-family: "Quicksand";
///    font-style: normal;
///    font-weight: 700;
///    src: local(Quicksand Bold), local(Quicksand-Bold), url(http://fonts.gstatic.com/s/quicksand/v5/32nyIRHyCu6iqEka_hbKsugdm0LZdjqr5-oayXSOefg.woff2) format("woff2");
///    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
///  }
///  .quicksand, h1, h2, h3, h4, h5, h6 {
///    font-family: "Quicksand", arial, sans-serif;
///    font-weight: 400;
///  }
///  
///  @font-face {
///    font-family: Roboto Slab;
///    font-style: normal;
///    font-weight: 300;
///    src: local(Roboto Slab Light), local(RobotoSlab-Light), url(http://themes.googleusercontent.com/static/fonts/robotoslab/v3/dazS1PrQQuCxC3iOAJFEJR_xHqYgAV9Bl_ZQbYUxnQU.woff) format("woff2");
///    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
///  }
///  @font-face {
///    font-family: Roboto Slab;
///    font-style: normal;
///    font-weight: 400;
///    src: local(Roboto Slab Regular), local(RobotoSlab-Regular), url(http://themes.googleusercontent.com/static/fonts/robotoslab/v3/y7lebkjgREBJK96VQi37ZobN6UDyHWBl620a-IRfuBk.woff) format("woff2");
///    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
///  }
///  @font-face {
///    font-family: Roboto Slab;
///    font-style: normal;
///    font-weight: 700;
///    src: local(Roboto Slab Bold), local(RobotoSlab-Bold), url(http://themes.googleusercontent.com/static/fonts/robotoslab/v3/dazS1PrQQuCxC3iOAJFEJTqR_3kx9_hJXbbyU8S6IN0.woff) format("woff2");
///    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
///  }
///  .roboto-slab, body, textarea, button {
///    font-family: Roboto Slab, arial, sans-serif;
///  }

@mixin googleFont($font,$elements:false,$weight:false){


	$thisFont : map-get($googleFonts,$font);
	$weights  : map-get($thisFont,weights);
	$family   : map-get($thisFont,font-family);

	@each $weight in $weights {

		$key : nth($weight,1);
		$val : nth($weight,2);
		$loc1 : map-get($val,localone);
		$loc2 : map-get($val,localtwo);
		$url  : map-get($val,url);

		@font-face {
		  font-family: #{$family};
		  font-style: normal;
		  font-weight: $key;
		  src: local(#{$loc1}), local(#{$loc2}), #{$url} format('woff2');
		  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
		}
	}

	.#{$font}{
		font-family: #{$family}, arial, sans-serif;

		@if $weight{
			font-weight: $weight;
		}

		@if $font == "open-sans-condensed"{

			letter-spacing: 0.1em;
			text-transform: uppercase;
		}
	}



	@if $elements {

		@each $element in $elements {
			#{$element}{
				@extend .#{$font};
			}
		}
	}
}

@function sliderShift($trackHeight,$sliderHeight){
	@return -($sliderHeight - $trackHeight) / 2;
}

// ------------------------------------------------------

/// Styling HTML5 range inputs
/// @name rangeInput
/// @param {Integer} rounding [0] Rounding in pixels
/// @param {Css pixel shorthand} padding [10px 20px] Rounding in pixels
/// @param {Array}inputs [list] List of input types to apply styles to
/// @example scss - Include
///  @include rangeInput(15px,15px,20px);
///
/// @example css - Output
///  input[type=range] {
///    -webkit-appearance: none;
///    width: 100%;
///    margin: 20px 0;
///    background-color: transparent;
///  }
///  input[type=range]::-webkit-slider-thumb {
///    -webkit-appearance: none;
///    height: 20px;
///    width: 15px;
///    cursor: pointer;
///    margin-top: -2.5px;
///    border-radius: 5px;
///  }
///  input[type=range]::-moz-range-thumb {
///    height: 20px;
///    width: 15px;
///    cursor: pointer;
///    border-radius: 5px;
///  }
///  input[type=range]::-ms-thumb {
///    height: 20px;
///    width: 15px;
///    cursor: pointer;
///    border-radius: 5px;
///  }
///  input[type=range]::-moz-range-track {
///    width: 100%;
///    height: 15px;
///    cursor: pointer;
///    border-radius: 5px;
///  }
///  input[type=range]::-webkit-slider-runnable-track {
///    width: 100%;
///    height: 15px;
///    cursor: pointer;
///    border-radius: 5px;
///  }
///  input[type=range]::-ms-track {
///    width: 100%;
///    height: 15px;
///    cursor: pointer;
///    background: transparent;
///    border-color: transparent;
///    color: transparent;
///  }
///  

@mixin rangeInput($trackHeight:15px,$sliderWidth:15px,$sliderHeight:20px,$knobRounding:5,$margin:20px){

	input{

		&[type=range]{

			// Normalise range slider
			-webkit-appearance: none;
  			width: 100%;
  			margin: $margin 0; 
  			background-color: rgba(0,0,0,0);


  			// Thumb styling --
  			// -------------------------

  			&::-webkit-slider-thumb{
  				
  				-webkit-appearance: none;
				height: $sliderHeight;
				width: $sliderWidth;
				cursor: pointer;
				margin-top: sliderShift($trackHeight,$sliderHeight);

				@if $knobRounding > 0{

					border-radius: #{$knobRounding}px;
				} 
  			}

  			&::-moz-range-thumb {

			  	height: $sliderHeight;
			  	width: $sliderWidth;
			  	cursor: pointer;

			  	@if $knobRounding > 0{

					border-radius: #{$knobRounding}px;
				}
			}


			&::-ms-thumb {

			    height: $sliderHeight;
			    width: $sliderWidth;
			    cursor: pointer;

			    @if $knobRounding > 0{

					border-radius: #{$knobRounding}px;
				}
			}

			// Track styling --
  			// -------------------------


			&::-moz-range-track {

			    width: 100%;
			    height: $trackHeight;
			    cursor: pointer;
			    border-radius: 5px;
			}

			&::-webkit-slider-runnable-track {

				width: 100%;
				height: $trackHeight;
				cursor: pointer;
				border-radius: 5px;
			}

			&::-ms-track {

			    width: 100%;
			    height: $trackHeight;
			    cursor: pointer;
			    background: transparent;
			    border-color: transparent;
			    color: transparent;
			}
			

			
		}
	}
}

// ------------------------------------------------------

/// Theming HTML5 range inputs
/// @name themeRangeInput
/// @param {#hex/rgba} themeColour [] Base colour for the input
/// @param {#hex/rgba} knob [] Colour of the slider knob
/// @param {#hex/rgba} focus [] Focus colour
/// @example scss - Include
///  @include themeRangeInput(#e9e9e9,#f3f3f3,#dd5a6f);
///
/// @example css - Output
///  input[type=range]::-webkit-slider-thumb {
///    background: #f3f3f3;
///    border: 1px solid silver;
///  }
///  input[type=range]::-moz-range-thumb {
///    background: #f3f3f3;
///    border: 1px solid silver;
///  }
///  input[type=range]::-ms-thumb {
///    background: #f3f3f3;
///    border: 1px solid silver;
///  }
///  input[type=range]::-moz-range-track {
///    background-color: #f6f6f6;
///    border: 1px solid #d0d0d0;
///  }
///  input[type=range]::-webkit-slider-runnable-track {
///    background-color: #f6f6f6;
///    border: 1px solid #d0d0d0;
///  }
///  input[type=range]::-ms-track {
///    background-color: #f6f6f6;
///    border: 1px solid #d0d0d0;
///  }
///  input[type=range]::-ms-fill-lower {
///    background: #dd5a6f;
///    border: 1px solid #d4304a;
///  }
///  input[type=range]:focus::-webkit-slider-thumb {
///    background: #dd5a6f;
///    border: 1px solid #ad243a;
///  }
///  input[type=range]:focus::-moz-range-thumb {
///    background: #dd5a6f;
///    border: 1px solid #ad243a;
///  }
///  input[type=range]:focus::-ms-thumb {
///    background: #dd5a6f;
///    border: 1px solid #ad243a;
///  }
///  input[type=range]:focus::-moz-range-track {
///    border: 1px solid #dd5a6f;
///  }
///  input[type=range]:focus::-webkit-slider-runnable-track {
///    border: 1px solid #dd5a6f;
///  }
///  input[type=range]:focus::-ms-track {
///    border: 1px solid #dd5a6f;
///  }
/// 

@mixin themeRangeInput($themeColour,$knob,$focus){
	

	input{

		&[type=range]{

  			// Thumb styling --
  			// -------------------------

  			&::-webkit-slider-thumb{
  				
  				background:$knob;
  				border: 1px solid darken($knob,20%);
  				
  			}

  			&::-moz-range-thumb {

			  	background:$knob;
			  	border: 1px solid darken($knob,20%);
			}


			&::-ms-thumb {

			    background:$knob;
			    border: 1px solid darken($knob,20%);
			}

			// Track styling --
  			// -------------------------


			&::-moz-range-track {

			    background-color: lighten($themeColour,5%);
				border: 1px solid darken($themeColour,10%);
			}

			&::-webkit-slider-runnable-track {

				background-color: lighten($themeColour,5%);
				border: 1px solid darken($themeColour,10%);
			}

			&::-ms-track {

			    background-color: lighten($themeColour,5%);
				border: 1px solid darken($themeColour,10%);
			}

			&::-ms-fill-lower {

			    background: $focus;
			    border: 1px solid darken($focus,10%);
			}

			&:focus{
				
				&::-webkit-slider-thumb{
  				
	  				background:$focus;
	  				border: 1px solid darken($focus,20%);
	  				
	  			}

	  			&::-moz-range-thumb {

				  	background:$focus;
				  	border: 1px solid darken($focus,20%);
				}


				&::-ms-thumb {

				    background:$focus;
				    border: 1px solid darken($focus,20%);
				}

				&::-moz-range-track {

					border: 1px solid $focus;
				}

				&::-webkit-slider-runnable-track {

					border: 1px solid $focus;
				}

				&::-ms-track {

					border: 1px solid $focus;
				}
			}
		}
	}
}

// ------------------------------------------------------

/// Normalise forms
/// @name form
/// @param {Integer} rounding [0] Rounding in pixels
/// @param {Css pixel shorthand} padding [10px 20px] Rounding in pixels
/// @param {Array}inputs [list] List of input types to apply styles to
/// @example scss - Include
///  @include form(5,10px);
///
/// @example css - Output
///  label {
///    display: block;
///    margin: 0 0 10px 5px;
///  }
///  
///  textarea, input[type=text], input[type=email], input[type=password], input[type=url], input[type=tel], input[type=search], input[type=date], input[type=time], input[type=number], select {
///    width: 100%;
///    max-width: 100%;
///    margin: 0;
///    outline: none;
///    margin-bottom: 20px;
///    padding: 10px;
///    font-size: 1em;
///    border-radius: 5px;
///  }
///  
///  input:focus {
///    outline: none;
///  }
///  
///  fieldset {
///    width: 100%;
///  }
///  


@mixin form($rounding:5,$padding:10px 20px,$inputs : "text" "email" "password" "url" "tel" "search" "date" "time" "number") {
	

	label{

		display: block;
		margin: 0 0 10px 5px;
	}

	textarea {

		width:100%;
		max-width:100%;
		margin:0;
		outline: none;
		margin-bottom: 20px;
		padding: $padding;
		font-size: 1em;

		@if $rounding {

			border-radius : #{$rounding}px;
		}
	}

	input{
		
		@each $input in $inputs {
			&[type=#{$input}]{
				@extend textarea;
			}
		}

		&:focus{

			outline: none;
		}

	}

	select{

		@extend textarea;
	}

	fieldset{

		width:100%;
	}

}

// ------------------------------------------------------

/// Theming forms
/// @name themeForms
/// @param {#hex/rgba} themeColour [] Base colour for the form elements
/// @param {#hex/rgba} primary [] Focus highlight colour
/// @example scss - Includes
///  @include form(5,10px);
///  @include themeForms(#e9e9e9,#dd5a6f);
///
/// @example css - Output
///  label {
///    display: block;
///    margin: 0 0 10px 5px;
///  }
///  
///  textarea, input[type=text], input[type=email], input[type=password], input[type=url], input[type=tel], input[type=search], input[type=date], input[type=time], input[type=number], select {
///    width: 100%;
///    max-width: 100%;
///    margin: 0;
///    outline: none;
///    margin-bottom: 20px;
///    padding: 10px;
///    font-size: 1em;
///    border-radius: 5px;
///  }
///  
///  input:focus {
///    outline: none;
///  }
///  
///  fieldset {
///    width: 100%;
///  }
///
///  textarea, input[type=text], input[type=email], input[type=password], input[type=url], input[type=tel], input[type=search], input[type=date], input[type=time], input[type=number], select {
///    background-color: #f6f6f6;
///    border: 1px solid #d0d0d0;
///    color: #b6b6b6;
///  }
///  textarea:hover, input[type=text]:hover, input[type=email]:hover, input[type=password]:hover, input[type=url]:hover, input[type=tel]:hover, input[type=search]:hover, input[type=date]:hover, input[type=time]:hover, input[type=number]:hover, select:hover {
///    border-color: #b6b6b6;
///  }
///  textarea:focus, input[type=text]:focus, input[type=email]:focus, input[type=password]:focus, input[type=url]:focus, input[type=tel]:focus, input[type=search]:focus, input[type=date]:focus, input[type=time]:focus, input[type=number]:focus, select:focus {
///    border-color: #dd5a6f;
///  }
///  

@mixin themeForms($themeColour,$primary){

	$inputs : "text" "email" "password" "url" "tel" "search" "date" "time" "number";

	textarea{

		background-color: lighten($themeColour,5%);
		border: 1px solid darken($themeColour,10%);
		color: contrast($themeColour,20%);

		&:hover{

			border-color: darken($themeColour,20%);;
		}

		&:focus{

			border-color: $primary;
		}
	} 

	select{

		@extend textarea;
	}

	@each $input in $inputs {
		input[type=#{$input}]{

			@extend textarea;
		}
	}
}

// =========================================================================================================================
//
// GRID
// ------------------------------------------------------


/// This mixin is used by @include gridClasses to calculate widths of 
/// column elements but it can also
/// be used nested in selectors in the same way that you might use 
/// the susy ruby gem. This is useful if you dont need all the grid
/// classes or if you want to apply column widths to elements that
/// are dynamicly added on to the page - e.g. iframes.
/// @name grid-col
/// @param {Integer} ammount [3] Amount of grid columns
/// @param {Integer} col-count [12] Total column count
/// @param {Percentage} gutter-width [2%] Grid gutter width (percentage)
/// @param {Bool} last [false] Add margin-right attribute unless true
/// @example scss - Include
///  .main{
///  	@include grid-col(8);
///  }
///  
///  .sidebar{
///  	@include grid-col(4,12,2%,true);
///  }
///
/// @example css - Output
///  .main {
///    float: left;
///    position: relative;
///    width: 66%;
///    margin-right: 2%;
///  }
///  
///  .sidebar {
///    float: left;
///    position: relative;
///    width: 32%;
///  }
///

@mixin grid-col($ammount:3,$col-count:12,$gutter-width:2%,$last:false){

	$gutter-total : ($col-count - 1) * $gutter-width;
	$remainder  : 100% - $gutter-total;
	$fill : ($ammount - 1)*$gutter-width;
	$unit : $remainder / $col-count;

	float:left;
	position:relative;
	width:$unit*$ammount+$fill;

	@if not $last{
		margin-right:$gutter-width;
	}
}

// ------------------------------------------------------

/// This mixin is used by @include gridClasses to calculate the margin
/// indents needed for the various push classes. as with @include grid-col
/// this mixin can be used individually, nested in a selector to calculate
/// the margin width of an element.
/// @name grid-push
/// @param {Integer} ammount [3] Amount of grid columns to indent
/// @param {Integer} col-count [12] Total column count
/// @param {Percentage} gutter-width [2%] Grid gutter width (percentage)
/// @example scss - Include
///  .indented {
///      @include grid-push(2);
///  }
///
/// @example css - Output
///  .indented {
///      margin-left: 17%;
///  }
///

@mixin grid-push($ammount:3,$col-count:12,$gutter-width:2%){

	$gutter-total : ($col-count - 1) * $gutter-width;
	$remainder  : 100% - $gutter-total;
	$fill : ($ammount - 1)*$gutter-width;
	$unit : $remainder / $col-count;

	margin-left:$unit*$ammount+$fill+$gutter-width; 

}

// ------------------------------------------------------

/// This mixin is used by @include gridClasses to calculate the margin
/// outdents needed for the various pull classes. as with @include grid-push
/// this mixin can be used individually, nested in a selector to calculate
/// the margin width of an element.
/// @name grid-pull
/// @param {Integer} ammount [3] Amount of grid columns to outdent
/// @param {Integer} col-count [12] Total column count
/// @param {Percentage} gutter-width [2%] Grid gutter width (percentage)
/// @example scss - Include
///  .oudented {
///  	@include grid-pull(3);
///  }
///
/// @example css - Output
///  .oudented {
///    margin-left: auto;
///    margin-right: 25.5% !important;
///  }
///

@mixin grid-pull($ammount:3,$col-count:12,$gutter-width:2%){

	$gutter-total : ($col-count - 1) * $gutter-width;
	$remainder  : 100% - $gutter-total;
	$fill : ($ammount - 1)*$gutter-width;
	$unit : $remainder / $col-count;

	margin-left:auto;
	margin-right:($unit*$ammount+$fill+$gutter-width)!important; 

}

// ------------------------------------------------------

/// This mixin genrates classes for a fluid grid system. You can specify
/// the amount of columns you want, the guttering, the screen width at
/// which you want elements to stack and optional outdent/indent classes.
/// @name gridClasses
/// @param {Integer} col-count [12] Amount of grid columns
/// @param {Percentage} gutter-width [2%] Gutter width (must be a percentage)
/// @param {Pixel value} stack-point [550px] Breakpoint at which to stack columns
/// @param {Bool} shift [true] Adds indent/outdent classes if true
/// @example scss - Include
///  @include gridClasses(12,2%,450px);
///
/// @example css - Output
///  .grid-row {
///    min-height: 1%;
///  }
///  .grid-row:after {
///    content: "";
///    display: table;
///    clear: both;
///  }
///  
///  .grid-col-1 {
///    float: left;
///    position: relative;
///    width: 6.5%;
///    margin-right: 2%;
///  }
///  
///  .grid-push-1 {
///    margin-left: 8.5%;
///  }
///  
///  .grid-pull-1 {
///    margin-left: auto;
///    margin-right: 8.5% !important;
///  }
///  
///  .grid-col-2 {
///    float: left;
///    position: relative;
///    width: 15%;
///    margin-right: 2%;
///  }
///  
///  .grid-push-2 {
///    margin-left: 17%;
///  }
///  
///  .grid-pull-2 {
///    margin-left: auto;
///    margin-right: 17% !important;
///  }
///  
///  .grid-col-3 {
///    float: left;
///    position: relative;
///    width: 23.5%;
///    margin-right: 2%;
///  }
///  
///  .grid-push-3 {
///    margin-left: 25.5%;
///  }
///  
///  .grid-pull-3 {
///    margin-left: auto;
///    margin-right: 25.5% !important;
///  }
///  
///  .grid-col-4 {
///    float: left;
///    position: relative;
///    width: 32%;
///    margin-right: 2%;
///  }
///  
///  .grid-push-4 {
///    margin-left: 34%;
///  }
///  
///  .grid-pull-4 {
///    margin-left: auto;
///    margin-right: 34% !important;
///  }
///  
///  .grid-col-5 {
///    float: left;
///    position: relative;
///    width: 40.5%;
///    margin-right: 2%;
///  }
///  
///  .grid-push-5 {
///    margin-left: 42.5%;
///  }
///  
///  .grid-pull-5 {
///    margin-left: auto;
///    margin-right: 42.5% !important;
///  }
///  
///  .grid-col-6 {
///    float: left;
///    position: relative;
///    width: 49%;
///    margin-right: 2%;
///  }
///  
///  .grid-push-6 {
///    margin-left: 51%;
///  }
///  
///  .grid-pull-6 {
///    margin-left: auto;
///    margin-right: 51% !important;
///  }
///  
///  .grid-col-7 {
///    float: left;
///    position: relative;
///    width: 57.5%;
///    margin-right: 2%;
///  }
///  
///  .grid-push-7 {
///    margin-left: 59.5%;
///  }
///  
///  .grid-pull-7 {
///    margin-left: auto;
///    margin-right: 59.5% !important;
///  }
///  
///  .grid-col-8 {
///    float: left;
///    position: relative;
///    width: 66%;
///    margin-right: 2%;
///  }
///  
///  .grid-push-8 {
///    margin-left: 68%;
///  }
///  
///  .grid-pull-8 {
///    margin-left: auto;
///    margin-right: 68% !important;
///  }
///  
///  .grid-col-9 {
///    float: left;
///    position: relative;
///    width: 74.5%;
///    margin-right: 2%;
///  }
///  
///  .grid-push-9 {
///    margin-left: 76.5%;
///  }
///  
///  .grid-pull-9 {
///    margin-left: auto;
///    margin-right: 76.5% !important;
///  }
///  
///  .grid-col-10 {
///    float: left;
///    position: relative;
///    width: 83%;
///    margin-right: 2%;
///  }
///  
///  .grid-push-10 {
///    margin-left: 85%;
///  }
///  
///  .grid-pull-10 {
///    margin-left: auto;
///    margin-right: 85% !important;
///  }
///  
///  .grid-col-11 {
///    float: left;
///    position: relative;
///    width: 91.5%;
///    margin-right: 2%;
///  }
///  
///  .grid-push-11 {
///    margin-left: 93.5%;
///  }
///  
///  .grid-pull-11 {
///    margin-left: auto;
///    margin-right: 93.5% !important;
///  }
///  
///  .grid-col-12 {
///    float: left;
///    position: relative;
///    width: 100%;
///    margin-right: 2%;
///  }
///  
///  .grid-push-12 {
///    margin-left: 102%;
///  }
///  
///  .grid-pull-12 {
///    margin-left: auto;
///    margin-right: 102% !important;
///  }
///  
///  [class*="grid-col"]:last-child {
///    margin-right: 0;
///  }
///  
///  @media screen and (max-width: 450px) {
///    [class*="grid-col"] {
///      margin-left: 0;
///      margin-right: 0;
///      width: 100%;
///    }
///  }
///

@mixin gridClasses ($col-count:12,$gutter-width:2%,$stack-point:550px,$shift:true){

	.grid-row {

		min-height: 1%;

		&:after {
	        content: "";
	        display: table;
	        clear: both;
	    }
	}

	@for $i from 1 through $col-count{

		.grid-col-#{$i}{
			@include grid-col($i,$col-count,$gutter-width);
		}

		@if $shift {

			.grid-push-#{$i}{
				@include grid-push($i,$col-count,$gutter-width)
			}

			.grid-pull-#{$i}{
				@include grid-pull($i,$col-count,$gutter-width)
			}

		}
	}

	[class*="grid-col"]:last-child{
		margin-right:0;
	}

	@media screen and (max-width:$stack-point){


		[class*="grid-col"]{
			margin-left: 0;
			margin-right: 0;
			width: 100%;
		}
	}
}






/// Create custon scrollbars for webkit browsers
/// @name scrollbar
/// @param {#hex/rgba} basecol [#ddd] Base colour of the scrollbar
/// @param {Pixel value} width [16px] Width of the scrollthumb
/// @example scss - Include
///  .scroll{
////    @include scrollbar(#333,10px);
///  }
///
/// @example css - Output
///  .scroll {
///    overflow: auto;
///  }
///  .scroll::-webkit-scrollbar {
///    width: 10px;
///    padding: 10px;
///  }
///  .scroll::-webkit-scrollbar-track {
///    background: #666666;
///  }
///  .scroll::-webkit-scrollbar-thumb {
///    border-radius: 10px;
///    background: #1a1a1a;
///    border: 2px solid #666666;
///  }
///


@mixin scrollbar($basecol:#ddd,$width:10px){

	overflow: auto ;

	&::-webkit-scrollbar {
	    width: $width;
	    height:$width;
	    padding:10px;
	}
	 
	&::-webkit-scrollbar-track {
	    background: lighten($basecol,20%);
	}
	 
	&::-webkit-scrollbar-thumb {
	    border-radius: 10px;
	    background: darken($basecol,10%);
	    border:2px solid lighten($basecol,20%);
	}

}

// ------------------------------------------------------

@mixin circle($size:20px){

	width:$size;
	height:$size;
	border-radius:$size;
}

/// Mixin for creating css triangle arrows
/// @name arrow
/// @param {Pixel value} size [10px] Triangular base width
/// @param {Option} dir ["down"] Arrow direction - "up" | "down" | "left" | "right"
/// @param {#hex/rgba} colour [white] Arrow colour
/// @param {0-1 Decimal} angle [0.7] Decimalised angle value
/// @example scss - Include
///  .arrow{
///     @include arrow(10px,'down',red,0.7);
///  }
///
/// @example css - Output
///  .arrow {
///    width: 0;
///    height: 0;
///    border-left: 7px solid transparent;
///    border-right: 7px solid transparent;
///    border-top: 10px solid red;
/// }
///

@mixin arrow($size:10px,$dir:"down",$colour:white,$angle:0.7){

	width: 0; 
	height: 0;

	@if $dir == "up"{
		border-left: $size*$angle solid transparent;
		border-right: $size*$angle solid transparent;
		border-bottom: $size solid $colour;
	}

	@if $dir == "down"{
		border-left: $size*$angle solid transparent;
		border-right: $size*$angle solid transparent;	
		border-top: $size solid $colour;
	}

	@if $dir == "right"{
		border-top: $size*$angle solid transparent;
		border-bottom: $size*$angle solid transparent;	
		border-left: $size solid $colour;
	}

	@if $dir == "left"{
		border-top: $size*$angle solid transparent;
		border-bottom: $size*$angle solid transparent;
		border-right:$size solid $colour;
	}
}


// ------------------------------------------------------

/// Helper to prevent highlighting effect on elements
/// @name noSelect
/// @example scss - Include
///  .viewport{
///  	@include noSelect;
///  }
/// @example css - Output
///  .viewport {
///    -webkit-touch-callout: none;
///    -webkit-user-select: none;
///    -khtml-user-select: none;
///    -moz-user-select: none;
///    -ms-user-select: none;
///    user-select: none;
///  }


@mixin noSelect {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

// ------------------------------------------------------

// ------------------------------------------------------

/// Adds icon classes generated with the icomoon app feather set.
/// @name icons
/// @param {String} path ["/css/icons/"] Destination path of the saved icons
/// @example scss - Include
///  @include icons('/path/to/icons/');
///
/// @example css - Output
///  @font-face {
///    font-family: 'icon-set';
///    src: url("/path/to/icons/icon-set.eot?-bp9gof");
///    src: url("/path/to/icons/icon-set.eot?#iefix-bp9gof") format("embedded-opentype"), url("/path/to/icons/icon-set.ttf?-bp9gof") format("truetype"), url("/path/to/icons/icon-set.woff?-bp9gof") format("woff"), url("/path/to/icons/icon-set.svg?-bp9gof#icomoon") format("svg");
///    font-weight: normal;
///    font-style: normal;
///  }
///  [class^="icon-"], [class*=" icon-"] {
///    font-family: 'icon-set';
///    speak: none;
///    font-style: normal;
///    font-weight: normal;
///    font-variant: normal;
///    text-transform: none;
///    line-height: 1;
///    /* Better Font Rendering =========== */
///    -webkit-font-smoothing: antialiased;
///    -moz-osx-font-smoothing: grayscale;
///  }
///  
///  .icon-eye:before {
///    content: "\e000";
///  }
///  
///  .icon-paper-clip:before {
///    content: "\e001";
///  }
///  
///  .icon-mail:before {
///    content: "\e002";
///  }
///  
///  .icon-toggle:before {
///    content: "\e003";
///  }
///  
///  .icon-layout:before {
///    content: "\e004";
///  }
///  
///  .icon-link:before {
///    content: "\e005";
///  }
///  
///  .icon-bell:before {
///    content: "\e006";
///  }
///  
///  .icon-lock:before {
///    content: "\e007";
///  }
///  
///  .icon-unlock:before {
///    content: "\e008";
///  }
///  
///  .icon-ribbon:before {
///    content: "\e009";
///  }
///  
///  .icon-image:before {
///    content: "\e010";
///  }
///  
///  .icon-signal:before {
///    content: "\e011";
///  }
///  
///  .icon-target:before {
///    content: "\e012";
///  }
///  
///  .icon-clipboard:before {
///    content: "\e013";
///  }
///  
///  .icon-clock:before {
///    content: "\e014";
///  }
///  
///  .icon-watch:before {
///    content: "\e015";
///  }
///  
///  .icon-air-play:before {
///    content: "\e016";
///  }
///  
///  .icon-camera:before {
///    content: "\e017";
///  }
///  
///  .icon-video:before {
///    content: "\e018";
///  }
///  
///  .icon-disc:before {
///    content: "\e019";
///  }
///  
///  .icon-printer:before {
///    content: "\e020";
///  }
///  
///  .icon-monitor:before {
///    content: "\e021";
///  }
///  
///  .icon-server:before {
///    content: "\e022";
///  }
///  
///  .icon-cog:before {
///    content: "\e023";
///  }
///  
///  .icon-heart:before {
///    content: "\e024";
///  }
///  
///  .icon-paragraph:before {
///    content: "\e025";
///  }
///  
///  .icon-align-justify:before {
///    content: "\e026";
///  }
///  
///  .icon-align-left:before {
///    content: "\e027";
///  }
///  
///  .icon-align-center:before {
///    content: "\e028";
///  }
///  
///  .icon-align-right:before {
///    content: "\e029";
///  }
///  
///  .icon-book:before {
///    content: "\e030";
///  }
///  
///  .icon-layers:before {
///    content: "\e031";
///  }
///  
///  .icon-stack:before {
///    content: "\e032";
///  }
///  
///  .icon-stack-2:before {
///    content: "\e033";
///  }
///  
///  .icon-paper:before {
///    content: "\e034";
///  }
///  
///  .icon-paper-stack:before {
///    content: "\e035";
///  }
///  
///  .icon-search:before {
///    content: "\e036";
///  }
///  
///  .icon-zoom-in:before {
///    content: "\e037";
///  }
///  
///  .icon-zoom-out:before {
///    content: "\e038";
///  }
///  
///  .icon-reply:before {
///    content: "\e039";
///  }
///  
///  .icon-circle-plus:before {
///    content: "\e040";
///  }
///  
///  .icon-circle-minus:before {
///    content: "\e041";
///  }
///  
///  .icon-circle-check:before {
///    content: "\e042";
///  }
///  
///  .icon-circle-cross:before {
///    content: "\e043";
///  }
///  
///  .icon-square-plus:before {
///    content: "\e044";
///  }
///  
///  .icon-square-minus:before {
///    content: "\e045";
///  }
///  
///  .icon-square-check:before {
///    content: "\e046";
///  }
///  
///  .icon-square-cross:before {
///    content: "\e047";
///  }
///  
///  .icon-microphone:before {
///    content: "\e048";
///  }
///  
///  .icon-record:before {
///    content: "\e049";
///  }
///  
///  .icon-skip-back:before {
///    content: "\e050";
///  }
///  
///  .icon-rewind:before {
///    content: "\e051";
///  }
///  
///  .icon-play:before {
///    content: "\e052";
///  }
///  
///  .icon-pause:before {
///    content: "\e053";
///  }
///  
///  .icon-stop:before {
///    content: "\e054";
///  }
///  
///  .icon-fast-forward:before {
///    content: "\e055";
///  }
///  
///  .icon-skip-forward:before {
///    content: "\e056";
///  }
///  
///  .icon-shuffle:before {
///    content: "\e057";
///  }
///  
///  .icon-repeat:before {
///    content: "\e058";
///  }
///  
///  .icon-folder:before {
///    content: "\e059";
///  }
///  
///  .icon-umbrella:before {
///    content: "\e060";
///  }
///  
///  .icon-moon:before {
///    content: "\e061";
///  }
///  
///  .icon-thermometer:before {
///    content: "\e062";
///  }
///  
///  .icon-drop:before {
///    content: "\e063";
///  }
///  
///  .icon-sun:before {
///    content: "\e064";
///  }
///  
///  .icon-cloud:before {
///    content: "\e065";
///  }
///  
///  .icon-cloud-upload:before {
///    content: "\e066";
///  }
///  
///  .icon-cloud-download:before {
///    content: "\e067";
///  }
///  
///  .icon-upload:before {
///    content: "\e068";
///  }
///  
///  .icon-download:before {
///    content: "\e069";
///  }
///  
///  .icon-location:before {
///    content: "\e070";
///  }
///  
///  .icon-location-2:before {
///    content: "\e071";
///  }
///  
///  .icon-map:before {
///    content: "\e072";
///  }
///  
///  .icon-battery:before {
///    content: "\e073";
///  }
///  
///  .icon-head:before {
///    content: "\e074";
///  }
///  
///  .icon-briefcase:before {
///    content: "\e075";
///  }
///  
///  .icon-speech-bubble:before {
///    content: "\e076";
///  }
///  
///  .icon-anchor:before {
///    content: "\e077";
///  }
///  
///  .icon-globe:before {
///    content: "\e078";
///  }
///  
///  .icon-box:before {
///    content: "\e079";
///  }
///  
///  .icon-reload:before {
///    content: "\e080";
///  }
///  
///  .icon-share:before {
///    content: "\e081";
///  }
///  
///  .icon-marquee:before {
///    content: "\e082";
///  }
///  
///  .icon-marquee-plus:before {
///    content: "\e083";
///  }
///  
///  .icon-marquee-minus:before {
///    content: "\e084";
///  }
///  
///  .icon-tag:before {
///    content: "\e085";
///  }
///  
///  .icon-power:before {
///    content: "\e086";
///  }
///  
///  .icon-command:before {
///    content: "\e087";
///  }
///  
///  .icon-alt:before {
///    content: "\e088";
///  }
///  
///  .icon-esc:before {
///    content: "\e089";
///  }
///  
///  .icon-bar-graph:before {
///    content: "\e090";
///  }
///  
///  .icon-bar-graph-2:before {
///    content: "\e091";
///  }
///  
///  .icon-pie-graph:before {
///    content: "\e092";
///  }
///  
///  .icon-star:before {
///    content: "\e093";
///  }
///  
///  .icon-arrow-left:before {
///    content: "\e094";
///  }
///  
///  .icon-arrow-right:before {
///    content: "\e095";
///  }
///  
///  .icon-arrow-up:before {
///    content: "\e096";
///  }
///  
///  .icon-arrow-down:before {
///    content: "\e097";
///  }
///  
///  .icon-volume:before {
///    content: "\e098";
///  }
///  
///  .icon-mute:before {
///    content: "\e099";
///  }
///  
///  .icon-content-right:before {
///    content: "\e100";
///  }
///  
///  .icon-content-left:before {
///    content: "\e101";
///  }
///  
///  .icon-grid:before {
///    content: "\e102";
///  }
///  
///  .icon-grid-2:before {
///    content: "\e103";
///  }
///  
///  .icon-columns:before {
///    content: "\e104";
///  }
///  
///  .icon-loader:before {
///    content: "\e105";
///  }
///  
///  .icon-bag:before {
///    content: "\e106";
///  }
///  
///  .icon-ban:before {
///    content: "\e107";
///  }
///  
///  .icon-flag:before {
///    content: "\e108";
///  }
///  
///  .icon-trash:before {
///    content: "\e109";
///  }
///  
///  .icon-expand:before {
///    content: "\e110";
///  }
///  
///  .icon-contract:before {
///    content: "\e111";
///  }
///  
///  .icon-maximize:before {
///    content: "\e112";
///  }
///  
///  .icon-minimize:before {
///    content: "\e113";
///  }
///  
///  .icon-plus:before {
///    content: "\e114";
///  }
///  
///  .icon-minus:before {
///    content: "\e115";
///  }
///  
///  .icon-check:before {
///    content: "\e116";
///  }
///  
///  .icon-cross:before {
///    content: "\e117";
///  }
///  
///  .icon-move:before {
///    content: "\e118";
///  }
///  
///  .icon-delete:before {
///    content: "\e119";
///  }
///  
///  .icon-menu:before {
///    content: "\e120";
///  }
///  
///  .icon-archive:before {
///    content: "\e121";
///  }
///  
///  .icon-inbox:before {
///    content: "\e122";
///  }
///  
///  .icon-outbox:before {
///    content: "\e123";
///  }
///  
///  .icon-file:before {
///    content: "\e124";
///  }
///  
///  .icon-file-add:before {
///    content: "\e125";
///  }
///  
///  .icon-file-subtract:before {
///    content: "\e126";
///  }
///  
///  .icon-help:before {
///    content: "\e127";
///  }
///  
///  .icon-open:before {
///    content: "\e128";
///  }
///  
///  .icon-ellipsis:before {
///    content: "\e129";
///  }
///  

@mixin icons($path:"/css/icons/"){

	@font-face {
		font-family: 'icon-set';
		src:url('#{$path}icon-set.eot?-bp9gof');
		src:url('#{$path}icon-set.eot?#iefix-bp9gof') format('embedded-opentype'),
			url('#{$path}icon-set.ttf?-bp9gof') format('truetype'),
			url('#{$path}icon-set.woff?-bp9gof') format('woff'),
			url('#{$path}icon-set.svg?-bp9gof#icomoon') format('svg');
		font-weight: normal;
		font-style: normal;
	}

	[class^="icon-"], [class*=" icon-"] {
		font-family: 'icon-set';
		speak: none;
		font-style: normal;
		font-weight: normal;
		font-variant: normal;
		text-transform: none;
		line-height: 1;

		/* Better Font Rendering =========== */
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}


	$icon-list : "eye" "paper-clip" "mail" "toggle" "layout" "link" "bell" "lock" "unlock" "ribbon" "image" "signal" "target" "clipboard" "clock" "watch" "air-play" "camera"
		"video" "disc" "printer" "monitor" "server" "cog" "heart" "paragraph" "align-justify" "align-left" "align-center" "align-right" "book" "layers" "stack" "stack-2"
		"paper" "paper-stack" "search" "zoom-in" "zoom-out" "reply" "circle-plus" "circle-minus" "circle-check" "circle-cross" "square-plus" "square-minus" "square-check"
		"square-cross" "microphone" "record" "skip-back" "rewind" "play" "pause" "stop" "fast-forward" "skip-forward" "shuffle" "repeat" "folder" "umbrella" "moon" "thermometer"
		"drop" "sun" "cloud" "cloud-upload" "cloud-download" "upload" "download" "location" "location-2" "map" "battery" "head" "briefcase" "speech-bubble" "anchor" "globe" "box"
		"reload" "share" "marquee" "marquee-plus" "marquee-minus" "tag" "power" "command" "alt" "esc" "bar-graph" "bar-graph-2" "pie-graph" "star" "arrow-left" "arrow-right" "arrow-up"
		"arrow-down" "volume" "mute" "content-right" "content-left" "grid" "grid-2" "columns" "loader" "bag" "ban" "flag" "trash" "expand" "contract" "maximize" "minimize" "plus"
		"minus" "check" "cross" "move" "delete" "menu" "archive" "inbox" "outbox" "file" "file-add" "file-subtract" "help" "open" "ellipsis"
	;


	@for $i from 1 through length($icon-list){

		$zeroIndex : $i - 1;

		@if $zeroIndex < 100{
		
			@if $zeroIndex < 10{
				$val  : '"\\e00#{$zeroIndex}"';

				.icon-#{nth($icon-list,$i)}:before{
					content: #{$val};
				}
			}

			@if $zeroIndex > 9{
				$val  : '"\\e0#{$zeroIndex}"';

				.icon-#{nth($icon-list,$i)}:before{
					content: #{$val};
				}
			}
		}

		@if $zeroIndex > 99{
			$val  : '"\\e#{$zeroIndex}"';

			.icon-#{nth($icon-list,$i)}:before{
				content: #{$val};
			}
		}
	}

}
// ------------------------------------------------------

/// Modern masonry css layout. Uses *column-count to arange content 
/// This mixin can be used with the @include cardClass; mixin
/// to create "Pinterest" style layouts. Html5 browser support only.
/// See caniuse for more info on column-count browser support.
/// @link http://caniuse.com/#search=flexbox Browser support for column-count
/// @see cardClass
/// @name masonryClasses
/// @param {Integer} ammount [4] Amount of masonry columns
/// @param {Pixel/em value} gutter-width [1em] Width between and below masonry items
/// @param {Integer} padding [0] Padding in pixels
/// @param {Integer} rounding [0] Rounding in pixels
/// @example scss - Include
///  @include masonryClasses(4);
///
/// @example css - Output
///  .masonry {
///    -moz-column-count: 4;
///    -webkit-column-count: 4;
///    column-count: 4;
///    margin: 1em 0;
///    -moz-column-gap: 1em;
///    -webkit-column-gap: 1em;
///    column-gap: 1em;
///  }
///  
///  .masonry .masonry-item {
///    display: inline-block;
///    margin: 0 0 1em;
///    width: 100%;
///    overflow: hidden;
///    border-radius: 5;
///  }
///  .masonry .masonry-item img {
///    display: block;
///    width: 100%;
///  }
///  
///


@mixin masonryClasses($col-count:4,$gutter-width:1em,$padding:0,$rounding:5) {

	.masonry{

		-moz-column-count: $col-count;
        -webkit-column-count: $col-count;
        column-count: $col-count;
		margin: $gutter-width 0;
	    -moz-column-gap: $gutter-width;
	    -webkit-column-gap: $gutter-width;
	    column-gap: $gutter-width;

	    .masonry-item{

			display: inline-block;
		    margin: 0 0 $gutter-width;
		    width: 100%;
		    overflow: hidden;

		    @if $padding > 0{

		    	padding:#{$padding}px;
		    }

		    @if $rounding > 0{

		    	border-radius:#{$rounding};
		    }

			img{

				display: block;
				width: 100%;
			}
		}

	}
}


// ------------------------------------------------------

/// Adds a .container class
/// @name containerClass
/// @param {Pixel value} maxWidth [1024px] The maximum width of the container
/// @param {Integer} padding [20] Padding left & right in pixels
/// @example scss - Include
///  @include containerClass(1024px,30)
///
/// @example css - Output
///  .container {
///    margin: 0 auto;
///    max-width: 1024px;
///    padding: 0 30px;
///  }
///

@mixin containerClass($maxWidth:1024px,$padding:20){

	.container{

		margin: 0 auto;
		max-width: $maxWidth;
		
		@if $padding > 0{
			padding:0 #{$padding}px;
		}
	}
}

// ------------------------------------------------------

/// Add stackable sections
/// @name stackClass
/// @param {Integer} padding [20] Padding top & bottom in pixels
/// @example scss - Include
///  @include stackClass(20)
///
/// @example css - Output
///  .stack {
///    padding: 20px 0;
///    min-height: 1%;
///  }
///  .stack:after {
///    content: "";
///    display: table;
///    clear: both;
///  }
///

@mixin stackClass($padding:40){
	
	.stack{

		@if $padding > 0{
			padding:#{$padding}px 0 ;
		}
		
		min-height: 1%;

		&:after {
	        content: "";
	        display: table;
	        clear: both;
	    }
	}
}

// ------------------------------------------------------

/// Theming stackable sections
/// @name themeStack
/// @param {#hex/rgba} themeColour [] The base theme colour
/// @example scss - Include
///  @include stackClass(20);
///  @include themeStack(#e9e9e9);
///
/// @example css - Output
///  .stack {
///    padding: 20px 0;
///    min-height: 1%;
///  }
///  .stack:after {
///    content: "";
///    display: table;
///    clear: both;
///  }
///  .stack {
///    display: block;
///    background-color: #e9e9e9;
///    border-bottom: 1px solid #d7d7d7;
///  }
///  .stack:nth-child(even) {
///    background-color: #e4e4e4;
///  }
///


@mixin themeStack($themeColour){

	.stack{

		display: block;
		background-color:$themeColour;
		border-bottom:1px  solid darken($themeColour,7%);

		&:nth-child(even){

			background-color: darken($themeColour,2%);
		}

	}

}

// ------------------------------------------------------

/// Nested include to apply full screen styles to a selector. 
/// Uses the vh css property see caniuse for more information
/// @link http://caniuse.com/#search=vh Browser support info for vh property
/// @name fullScreen
/// @example scss - Include
///  section#intro {
///  	@include fullScreen;
///  }
///
/// @example css - Output
///  section#intro {
///    position: relative;
///    width: 100%;
///    height: 100vh;
///  }
///

@mixin fullScreen{

	position: relative;
	width:100%;
	height:100vh;
}

@mixin fullScreenClass{

	.fullscreen{
		position: relative;
		width:100%;
		height:100vh;
	}
}

@mixin stickyHeader($height:50px,$position:fixed){

	position: $position;
	top:0;
	height:$height;
	width:100%;
	z-index: 9999;
}

@mixin stickyHeaderClass($height:50px,$position:fixed){

	header.sticky{

		position: $position;
		top:0;
		height:$height;
		width:100%;
		z-index: 9999;
	}
	
}

@mixin paddedClass($ammount:20px){

	.padded{

		padding: $ammount;

		h1,h2,h3,h4,h5,h6,p{

			&:last-child{

				margin-bottom: 0;
			}
		}
	}
}

@mixin fitParent($all:"", $top:"", $right:"", $bottom:"", $left:""){
	position:absolute;
	@if $all != ""{
		top:$all;
		right:$all;
		bottom:$all;
		left:$all;
	} @else{
		@if $top != ""{
			top:$top;
			} @else{
			top:0;
		}

		@if $right != ""{
			right:$right;
			} @else{
			right:0;
		}

		@if $bottom != ""{
			bottom:$bottom;
			} @else{
			bottom:0;
		}

		@if $left != ""{
			left:$left;
			} @else{
			left:0;
		}
	}	
}

@mixin sideBar($width:300px,$side:"left"){

	position:absolute;
	top:0;
	bottom:0;
	width:$width;

	@if $side == "left"{
		left:0;
	}

	@if $side == "right"{
		right:0;
	}
}

@mixin sideBarAppend($width:300px,$side:"left"){

	position:absolute;
	top:0;
	bottom:0;

	@if $side == "left"{
		left:$width;
		right:0;
	}

	@if $side == "right"{
		right:$width;
		left:0;
	}
}

@mixin centre($axis: "both"){
	position:absolute;
	@if $axis == "y"{
		top:50%;
		@include translateY(-50%);
	}
	@if $axis == "x"{
		left:50%;
		@include translateX(-50%);
	}
	@if $axis == "both"{
		top:50%;
		left:50%;
		@include translate(-50%, -50%);
	}	
}

@mixin centreClasses{

	.centre{
		@include centre;
	}

	.centre-x{

		height:100%;
		@include centre(x);
	}

	.centre-y{

		width:100%;
		@include centre(y);
	}

	.text-centre{

		text-align: center;
	}
}

@mixin messageClass($padding:10px,$rounding:5,$border:false){

	.message{

		display: block;
		padding:$padding;
		margin-bottom: 10px;

		@if $rounding > 0 {

			border-radius: #{$rounding}px;
		}

		@if $border {

			border:1px solid #ccc;
		}

		h1,h2,h3,h4,h5,p{

			margin-bottom: 0;
			font-size: 1em;
		}
	}

}

@mixin themeMessageClass($classname:"",$color:$col-primary,$text-col:false){

	.message.#{$classname} {

		@if $text-col == false {

			color: $color;
			border-color: $color;
			background-color: lighten($color,45%);

			h1,h2,h3,h4,h5,h6,p{

				color: $color;
			}

		}

		@if $text-col{

			color: $text-col;
			border-color: $color;
			background-color: $color;

			h1,h2,h3,h4,h5,h6,p{

				color: $text-col;
			}
		}

	}


}


@mixin navigationClasses($orientation:"horizontal",$font-size:1em,$link-height:50px,$padding:20px,$rounding:5px,$align:left,$expand:false){


	@if $orientation == "horizontal"{

		nav.horizontal{

			display:inline-block;

			@if $rounding{

				//overflow: hidden;
				border-radius:#{$rounding};
			}

			ul{
				
				text-align: $align;

				li{

					position: relative;
					display: inline-block;

					.subnav{

						height:0;
						overflow:hidden;
						position: absolute;
						top:$link-height;
						width:300px;

						li{

							display:list-item;

							&.active a{

								color:$col-pastel-red;
							}
						}
					}

					&:hover .subnav{

						height:auto;
					}
					
					a{
						
						font-size: $font-size;
						line-height: $link-height;
						display: block;
						padding:0 $padding;

					}
				}
			}

		}
	}

	@if $orientation == "vertical"{

		nav.vertical{

			@if $rounding{

				overflow: hidden;
				border-radius:#{$rounding};
			}

			ul{
				
				text-align: $align;	

				li{

					display: list-item;
					position: relative;

					@if $expand{

						&:hover .subnav{

							height:auto;
							padding:$padding 0;
						}

					}

					a{
						
						font-size: $font-size;
						line-height: $link-height;
						display: block;
						padding:0 $padding;

					}
				}
			}

			.subnav{

				margin-bottom: 30px;

				li{

					a{
						font-size: 0.8em;
						padding-left: $padding*1.5;
						line-height: $link-height*0.7; 
					}

					&.active a{

						color:$col-pastel-red;
						border-left:4px solid $col-pastel-red;
					}
				}
				// &.closed{

				// 	padding:0;
				// 	height:0;
				// 	overflow:hidden;
				// }
			}
		}
	}
}

@mixin navBadge($colour:$col-primary){

	nav .badge{

		position: absolute;
		right:5px;
		top:5px;
		font-size:14px;
		color:white;
		line-height:28px;
		width:28px;
		border-radius:100%;
		background:$colour;
		text-align:center;
	}
}

//@include navBadge;

@mixin subnav($orientation:"vertical",$indent:40px,$expand:false){
	
	@if $orientation == "vertical"{

		li a{
			
			font-size: 0.9em;
			padding-left:$indent;
		}
	}

	@if $expand{

		height: 0;
		overflow: hidden;
		@include single-transition(all,0.3s,ease);
	}
}

@mixin themeNavigation($className:"",$bg:false,$hover:#fff,$text:#666,$text-hover:#000){

	nav.#{$className}{
	
		@if $bg{
			background-color:$bg;
		}

		ul li a{

			color:$text;

			&:hover{

				background-color:$hover;
				color:$text-hover;
			}
		}

		@if $bg{
			
			.subnav{
				background-color:$bg;
			}
		}
	}
}


/// For styling doughnut svgs
/// @name doughnut
/// @param {String} classname [] Class name for the element
/// @param {#hex/rgba} stroke [#e7534f] Colour of the path stroke
/// @param {Pixel value} stroke-width [5px] Width of the path stroke
/// @param {#hex/rgba} circle-col [rgba(0,0,0,0.1)] Colour of the circle stroke
/// @param {#hex/rgba} text-col [#111] Colour percentage
/// @example scss - Include
///  @include doughnut('primary');
///
/// @example css - Output
///  svg.primary {
///    position: relative;
///  }
///  svg.primary circle {
///    fill: none;
///    stroke: rgba(0, 0, 0, 0.1);
///    stroke-width: 5px;
///  }
///  svg.primary path {
///    stroke: #289e83;
///    fill: none;
///    stroke-width: 5px;
///  }
///  
///  .primary.percentage {
///    color: #111;
///    font-size: 1.4em;
///    position: absolute;
///    top: 50%;
///    left: 50%;
///    -moz-transform: translate(-50%, -50%);
///    -ms-transform: translate(-50%, -50%);
///    -webkit-transform: translate(-50%, -50%);
///    transform: translate(-50%, -50%);
///  }
///  

@mixin doughnut($className,$stroke:#e7534f,$stroke-width:5px,$circle-col:rgba(0,0,0,0.1),$text-col:#111){

	svg.#{$className}{

		position: relative;

		circle {

			fill: none;
			stroke: $circle-col;
	    	stroke-width: $stroke-width;
		}
		
		path{

			stroke: $stroke;
			fill: none;
    		stroke-width: $stroke-width;

    		&:hover{

    			stroke-width: $stroke-width+4px;
    		}
		}
	}

	.#{$className}.percentage{
		
		color:$text-col;
		font-size: 1.4em;
		@include centre;
	}

}


@mixin pieNut($className,$stroke:#e7534f,$stroke-width:5px,$circle-col:rgba(0,0,0,0.1)){

	svg.pie-nut.#{$className}{

		circle {

			fill: none;
			stroke: $circle-col;
	    	stroke-width: $stroke-width;
		}
		
		path{

			stroke: $stroke;
			fill: none;
    		stroke-width: $stroke-width;

    		&:nth-child(even){

    			stroke: darken($stroke,10%);
    		}
		}
	}
}


@mixin tables($padding:10px){

	table {

		width:100%;
	    display: table;
	    border-collapse: separate;

	    tbody {

			display: table-row-group;
			vertical-align: middle;
			border-color: inherit;
		}

		tr {

		    display: table-row;
		    vertical-align: inherit;
		    border-color: inherit;
		}

		th{

			font-weight: 600;
		}

		th, td{
			
			padding: $padding;
			line-height: 1.5;
			vertical-align: top;
			display: table-cell;
		}
	}	
}


@mixin themeTables($themeColour){
	
	table{

		td{

			border-top-width: 1px;
			border-style: solid;
			border-color:contrast($themeColour,10%);
		}

		th{

			color: contrast($themeColour,60%);
			border-color:contrast($themeColour,10%);
		}

		tbody tr{

			&:nth-child(odd){
				background-color: lighten($themeColour,2%);
			}
		}
	}
}


// Experimental
// --------------------------------------

	@function applyColour($method,$col,$amt){
		
		@if $method == "lighten"{
			@return lighten($col,$amt);
		}

		@if $method == "darken"{
			@return darken($col,$amt);
		}
	}




// Experimental
// --------------------------------------



@mixin themeBase($themeColour:#e9e9e9){
	
	body{

		background-color: $themeColour;
	}
}




@mixin themeLinks($link:black,$hover:$col-primary,$visited:$col-secondary){

	a{

		&:link{

			color:$link;
			text-decoration: none;
		}

		&:hover{

			color: $hover;
		}

		&:active,&:visited{

			color:darken($hover,10%);
		}
	}
}








@mixin swatch($name,$colour){


	.#{$name}{

		color:$colour;

		&.bg{

			background-color:$colour;
		}

		&.border{

			border-color:$colour;
		}

		&.contrast{

			color: contrast($colour,45%);
		}
	}

}





@mixin themeTypography($themeColour:#e9e9e9,$body:#666,$heading:#111,$highlight:#e7534f){

    body{

        color:$body;
        line-height: 140%;
    }

    h1,h2,h3,h4,h5,h6{

        color:$heading;
    }

    p{

        color:$body;
    }


    hr{

        display: block;
        margin: 20px 20px 40px 20px;
        height:0;
        border-left:none;
        border-right:none;
        border-top: 1px solid darken($themeColour,20%);
        border-bottom: 1px solid lighten($themeColour,20%);
        opacity: 0.3;
    }

    mark{

        font-size: 0.8em;
        background-color: orange;
        padding:5px;
    }

    .highlighted{

        font-size: 0.9em;
        padding:3px 5px;
        border-radius:5px;
        
        @if (lightness($themeColour) > 50) {
            color: $highlight;
            background-color: lighten($highlight,30%);
            border:1px solid lighten($highlight,20%);
        } @else {
            background-color: $highlight;
            border:1px solid $highlight;
            color: $themeColour;
        }
    }

}

@mixin themeBlockquote($border:$col-pastel-red,$bg:#f3f3f3,$rounding:5){

    blockquote{

        padding:20px;
        background-color:$bg;
        border-left:5px solid $border;

        @if $rounding > 0 {
            border-radius:#{$rounding}px;
        }
    }
}

@mixin headingEmphasis($colour:$col-primary,$icon:false){

    h1,h2,h3,h4,h5,h6{

        &.emph{
            
            line-height:1.2;
            color:$colour;
            padding-left:20px;
            border-left:5px solid $colour;

            @if $icon {

                [class^="icon-"], [class*=" icon-"]{

                    line-height: 1.7;
                    font-size: 0.8em;
                    float:right;
                }
            }
        }
    }
}



//Adds a gradient text effect - WEBKIT ONLY!!!
@mixin gradientText($top:#fcfcfc,$bottom:#828282){
	color:$top;
	background: -webkit-linear-gradient($top,$bottom);
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;	
}

//For css3 text columns supported by IE10+
@mixin columnText($cols:3,$gap:40px,$breakpoint:550px,$rules:true){

    $vendors : "-webkit-" "-moz-" "";

    .columns{

        @each $vendor in $vendors {

            #{$vendor}column-count : $cols;
            #{$vendor}column-gap : $gap;
            @if $rules {
                #{$vendor}column-rule: 1px outset rgba(0,0,0,0.2);
            }
        }

        @media screen and (max-width:$breakpoint){

            @each $vendor in $vendors {

                #{$vendor}column-count : 1;
                #{$vendor}column-gap : 0;
                @if $rules {
                    #{$vendor}column-rule:none;
                }


            }
        }

    }
}