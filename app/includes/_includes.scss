
//Tones
// --------------------------------
$col-light  : #f6f6f6;
$col-grey   : #ababab;
$col-dark   : #222222;

//Hues
// --------------------------------
$col-blue   : #125c8f;
$col-green  : #4f903e;
$col-orange : #eb9f18;

// ============================================================
// DARK THEME v0.8
// ============================================================
	
	// THEME STYLE
	// -------------------------------------------------------
	$theme-style : "dark"; // "dark" or "light"

	// FONTS
	// -------------------------------------------------------
	$primary-font : "Open Sans", sans-serif;
	$secondary-font : "Open Sans Condensed", sans-serif;

	// COLOURS
	// --------------------------------------------------------
	$theme-bg-colour     : #222222;
	$theme-text-colour   : #AAAAAA;
	$theme-primary-col   : #e7a753;
	$theme-secondary-col : #aa4f40;
	$theme-tertiary-col  : #c37a3f;

	//Subtlety
	$subtlety            : 5%;
	$theme-subtle-light  : lighten($theme-bg-colour,$subtlety);
	$theme-subtle-dark   : darken($theme-bg-colour,$subtlety);

	//For loop mapping
	$theme-colours : (
		primary   : $theme-primary-col, 
		secondary : $theme-secondary-col, 
		tertiary  : $theme-tertiary-col
	);


	// BREAKPOINTS
	// --------------------------------------------------------
	$small-screens  : 550px;
	$medium-screens : 780px;

// ============================================================



// DIMENSIONS
// ==============================================
	$containerWidth : 1000px;
	$baseRounding   : 10px;



// FORM SETTINGS
// ==============================================
	$inputs       : "text" "email" "password" "url" "tel" "search" !default;
	$fmPadding    : 20px!default;
	$fontFace     : 0.8em $primary-font !default;
	$fmRounding   : 10px;

	// Settings for modern checks 
	$modernChecks : true;
	$dialColour   : $theme-primary-col;
	$check-width  : 55px;
	$check-height : 20px;
	$rounding     : 5px;
	$inset        : 2px;

// ============================================================
// LIGHT THEME v0.7
// ============================================================

	// THEME STYLE
	// -------------------------------------------------------
	$theme-style : "light"; // "dark" or "light"

	// FONTS
	// -------------------------------------------------------
	$primary-font : "Open Sans", sans-serif;
	$secondary-font : "Open Sans Condensed", sans-serif;

	// COLOURS
	// --------------------------------------------------------
	$theme-bg-colour     : #EAEAEA;
	$theme-text-colour   : #444444;
	$theme-primary-col   : #e7a753;
	$theme-secondary-col : #aa4f40;
	$theme-tertiary-col  : #c37a3f;

	//Subtlety
	$subtlety            : 3%;
	$theme-subtle-light  : lighten($theme-bg-colour,$subtlety);
	$theme-subtle-dark   : darken($theme-bg-colour,$subtlety);

	//For loop mapping
	$theme-colours : (
		primary    : $theme-primary-col, 
		secondary  : $theme-secondary-col, 
		tertiary   : $theme-tertiary-col
	);


	// BREAKPOINTS
	// --------------------------------------------------------
	$small-screens  : 550px;
	$medium-screens : 780px;

// ============================================================

// ##########################################################################
// @Includes version 0.2
// ##########################################################################

@import "compass/css3";


$col-primary :  #289e83;
$col-secondary: #1b8898;
$col-warning:   #d7861e;
$col-danger:    #ac2828;
$col-success:   #54A03A;
$col-turquoise: #289e83;

@function headerSize($size,$ceiling,$floor){

	$range    : $ceiling - $floor;
	$interval : $range / 6;

	@return $interval * $size + $floor; 
}


@mixin normalise($h1Size:2.5em){

	html, body, div, span, applet, object, iframe,
	h1, h2, h3, h4, h5, h6, p, blockquote, pre,
	a, abbr, acronym, address, big, cite, code,
	del, dfn, em, img, ins, kbd, q, s, samp,
	small, strike, strong, sub, sup, tt, var,
	b, u, i, center,
	dl, dt, dd, ol, ul, li,
	fieldset, form, label, legend,
	table, caption, tbody, tfoot, thead, tr, th, td,
	article, aside, canvas, details, embed,
	figure, figcaption, footer, header, hgroup,
	menu, nav, output, ruby, section, summary,
	time, mark, audio, video {
		margin: 0;
		padding: 0;
		border: 0;
		font: inherit;
		font-size: 100%;
		vertical-align: baseline;
	}

	html {
	    line-height: 1;
	}

	ol, ul {
	    list-style: none;
	}

	table {
	    border-collapse: collapse;
	    border-spacing: 0;
	}

	caption, th, td {
	    text-align: left;
	    font-weight: normal;
	    vertical-align: middle;
	}

	q, blockquote {
	    quotes: none;
	}
	q:before, q:after, blockquote:before, blockquote:after {
	    content: "";
	    content: none;
	}

	a img {
	    border: none;
	}

	article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
	    display: block;
	}

	*{

		@include box-sizing(border-box);
	}

	body{

		font-family: "arial", sans-serif;
	}

	h1,h2,h3,h4,h5,h6,p{

		margin-bottom: 1.3em
	}

	h1{

	    font-size:headerSize(6,$h1Size,1em);
	}

	h2{

	    font-size:headerSize(5,$h1Size,1em);
	}

	h3{
	  
	    font-size:headerSize(4,$h1Size,1em);
	}

	h4{

	    font-size:headerSize(3,$h1Size,1em);
	}

	h5{

	    font-size:headerSize(2,$h1Size,1em);
	}

	h6{

	    font-size:headerSize(1,$h1Size,1em) 
	}


}


@mixin button($rounding:5){
		
	button {

		display: inline-block; 			
		outline:none;
		padding: 10px 20px;
		margin-bottom: 10px;
		cursor: pointer;
		color: #333;
		background-color:#f3f3f3;
		border-top:1px solid #bbb;
		border-left:1px solid #bbb;
		border-right:1px solid #bbb;
		border-bottom:4px solid #bbb;
		font:{
			size:0.9em;
			weight:600;
		}

		@include border-radius(#{$rounding}px);

		&:hover, &:focus{

			background-color:#ddd;
		}

		[class^="icon-"], [class*=" icon-"]{

			line-height: 0;
			position: relative;
			margin-right:8px;
		}

		&.large{

			padding: 15px 30px;
			font:{
				size:1.2em;
			}

			[class^="icon-"], [class*=" icon-"]{

				font-size: 1.6em;
				
				top:5px;
				left:-10px;
				
			}
		}

		&.small{

			padding: 5px 10px;
			font:{
				size:0.8em;
			}

			[class^="icon-"], [class*=" icon-"]{
				
				margin-right:5px;
			}
		}

		&.right{

			float: right;
		}
	}

	.button{

		@extend button;
	}
}


// Requires @include button mixin...
@mixin buttonTheme($className:"btn",$bgcol:#d73f2b,$opt-colour:false,$rounding:5,$gradient:false){

	button.#{$className}{

		@extend button;

		@if $opt-colour{
			color: $opt-colour;
		}
		@if $opt-colour == false{
			color: lighten($bgcol,40%);
		}
		border-color: darken($bgcol,10%);

		@if $gradient == false {
			background-color:$bgcol;
		}

		@if $gradient == true {

			@include background-image(linear-gradient(lighten($bgcol,7%),darken($bgcol,7%)));
			border-color: darken($bgcol,7%);
		}
		
		@if $rounding > 0{

			@include border-radius(#{$rounding}px);
		}

		&:hover, &:focus{

			@if $gradient == false {
				background-color:darken($bgcol,10%);
				border-color: darken($bgcol,20%);
			}

			@if $gradient == true {
				@include background-image(linear-gradient($bgcol,darken($bgcol,7%)));
				border-color: darken($bgcol,7%);
			}
		}

	}
}
@mixin cardClass($padding:20px,$rounding:0){

	.card{

		font-size: 0.95em;

		@if $rounding > 0{

			overflow: hidden;
			border-radius: #{$rounding}px;
		}

		.card-body,header{

			h1,h2,h3,h4,h5,h6{

				font-size: 1.4em;
				margin-bottom: 0.7em;
			}

			h1,h2,h3,h4,h5,h6,p{

				&:last-child{

					margin-bottom: 0;
				}

			}
		}

		.card-body, header{
			padding:$padding;
		}

		footer{

			padding:0 $padding/2;

			h1,h2,h3,h4,h5,h6,p, a{

				font-size: 1em;
				display: inline-block;
				padding:$padding/2;

				&:first-child{

					padding-left: 0;
				}
			}

			button{
				
				margin-top: $padding/4;
				margin-bottom: $padding/4;
				margin-left:5px;
			}
		}
	}
}
// -----------------------------------------
// Font face includes
// -----------------------------------------
//
// open-sans
// open-sans-condensed
// roboto
// roboto-slab
// leckerli-one

@mixin open-sans($elements:false,$weight:300){

	@font-face {
    font-family: 'Open Sans';
    font-style: normal;
    font-weight: 400;
    src: local('Open Sans'), local('OpenSans'), url(http://themes.googleusercontent.com/static/fonts/opensans/v8/cJZKeOuBrn4kERxqtaUH3T8E0i7KZn-EPnyo3HZu7kw.woff) format('woff');
	}
	@font-face {
	    font-family: 'Open Sans';
	    font-style: normal;
	    font-weight: 600;
	    src: local('Open Sans Semibold'), local('OpenSans-Semibold'), url(http://themes.googleusercontent.com/static/fonts/opensans/v8/MTP_ySUJH_bn48VBG8sNSnhCUOGz7vYGh680lGh-uXM.woff) format('woff');
	}
	@font-face {
	    font-family: 'Open Sans';
	    font-style: normal;
	    font-weight: 800;
	    src: local('Open Sans Extrabold'), local('OpenSans-Extrabold'), url(http://themes.googleusercontent.com/static/fonts/opensans/v8/EInbV5DfGHOiMmvb1Xr-hnhCUOGz7vYGh680lGh-uXM.woff) format('woff');
	}

	.open-sans{
		font-family: "Open Sans", sans-serif;
		font-weight: $weight;
	}

	@if $elements {

		@each $element in $elements {
			#{$element}{
				@extend .open-sans;
			}
		}
	}
}


@mixin open-sans-condensed($elements:false,$weight:300){

	@font-face {
	    font-family: 'Open Sans Condensed';
	    font-style: normal;
	    font-weight: 300;
	    src: local('Open Sans Cond Light'), local('OpenSans-CondensedLight'), url(http://themes.googleusercontent.com/static/fonts/opensanscondensed/v7/gk5FxslNkTTHtojXrkp-xF1YPouZEKgzpqZW9wN-3Ek.woff) format('woff');
	}
	@font-face {
	    font-family: 'Open Sans Condensed';
	    font-style: normal;
	    font-weight: 700;
	    src: local('Open Sans Condensed Bold'), local('OpenSans-CondensedBold'), url(http://themes.googleusercontent.com/static/fonts/opensanscondensed/v7/gk5FxslNkTTHtojXrkp-xONSK5BxN3NFS4EJkViHIqo.woff) format('woff');
	}

	.open-sans-condensed{
		font-family: "Open Sans Condensed", sans-serif;
		font-weight: $weight;
		letter-spacing: 0.1em;
		text-transform: uppercase;
	}

	@if $elements {

		@each $element in $elements {
			#{$element}{
				@extend .open-sans-condensed;
			}
		}
	}
}


@mixin roboto($elements:false,$weight:300){

	@font-face {
	  	font-family: 'Roboto';
	  	font-style: normal;
	  	font-weight: 300;
	  	src: local('Roboto Light'), local('Roboto-Light'), url(http://themes.googleusercontent.com/static/fonts/roboto/v11/Hgo13k-tfSpn0qi1SFdUfT8E0i7KZn-EPnyo3HZu7kw.woff) format('woff');
	}
	@font-face {
	  	font-family: 'Roboto';
	  	font-style: normal;
	  	font-weight: 400;
	  	src: local('Roboto Regular'), local('Roboto-Regular'), url(http://themes.googleusercontent.com/static/fonts/roboto/v11/2UX7WLTfW3W8TclTUvlFyQ.woff) format('woff');
	}
	@font-face {
	  	font-family: 'Roboto';
	  	font-style: normal;
	  	font-weight: 700;
	  	src: local('Roboto Bold'), local('Roboto-Bold'), url(http://themes.googleusercontent.com/static/fonts/roboto/v11/d-6IYplOFocCacKzxwXSOD8E0i7KZn-EPnyo3HZu7kw.woff) format('woff');
	}

	.roboto{
		font-family: "Roboto", arial, sans-serif;
		font-weight: $weight;
	}

	@if $elements {

		@each $element in $elements {
			#{$element}{
				@extend .roboto;
			}
		}
	}
}


@mixin roboto-slab($elements:false,$weight:300){

	@font-face {
	  	font-family: 'Roboto Slab';
	  	font-style: normal;
	  	font-weight: 300;
	  	src: local('Roboto Slab Light'), local('RobotoSlab-Light'), url(http://themes.googleusercontent.com/static/fonts/robotoslab/v3/dazS1PrQQuCxC3iOAJFEJR_xHqYgAV9Bl_ZQbYUxnQU.woff) format('woff');
	}
	@font-face {
	  	font-family: 'Roboto Slab';
	  	font-style: normal;
	  	font-weight: 400;
	  	src: local('Roboto Slab Regular'), local('RobotoSlab-Regular'), url(http://themes.googleusercontent.com/static/fonts/robotoslab/v3/y7lebkjgREBJK96VQi37ZobN6UDyHWBl620a-IRfuBk.woff) format('woff');
	}
	@font-face {
	  	font-family: 'Roboto Slab';
	  	font-style: normal;
	  	font-weight: 700;
	  	src: local('Roboto Slab Bold'), local('RobotoSlab-Bold'), url(http://themes.googleusercontent.com/static/fonts/robotoslab/v3/dazS1PrQQuCxC3iOAJFEJTqR_3kx9_hJXbbyU8S6IN0.woff) format('woff');
	}

	.roboto-slab{
		font-family: "Roboto Slab", times, serif;
	}

	@if $elements {

		@each $element in $elements {
			#{$element}{
				@extend .roboto-slab;
			}
		}
	}
}

@mixin leckerli-one($elements:false){

	@font-face {
	    font-family: 'Leckerli One';
	    font-style: normal;
	    font-weight: 400;
	    src: local('Leckerli One'), local('LeckerliOne-Regular'), url(http://fonts.gstatic.com/s/leckerlione/v7/S2Y_iLrItTu8kIJTkS7DrOgdm0LZdjqr5-oayXSOefg.woff2) format('woff2');
	    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
	}

	.leckerli-one{
		font-family: "Leckerli One", arial, sans-serif;
	}

	@if $elements {

		@each $element in $elements {
			#{$element}{
				@extend .leckerli-one;
			}
		}
	}
}

@function sliderShift($trackHeight,$sliderHeight){
	@return -($sliderHeight - $trackHeight) / 2;
}

@mixin rangeInput($trackHeight:15px,$sliderWidth:15px,$sliderHeight:20px,$knobRounding:5,$margin:20px){

	input{

		&[type=range]{

			// Normalise range slider
			-webkit-appearance: none;
  			width: 100%;
  			margin: $margin 0; 
  			background-color: rgba(0,0,0,0);


  			// Thumb styling --
  			// -------------------------

  			&::-webkit-slider-thumb{
  				
  				-webkit-appearance: none;
				height: $sliderHeight;
				width: $sliderWidth;
				cursor: pointer;
				margin-top: sliderShift($trackHeight,$sliderHeight);

				@if $knobRounding > 0{

					border-radius: #{$knobRounding}px;
				} 
  			}

  			&::-moz-range-thumb {

			  	height: $sliderHeight;
			  	width: $sliderWidth;
			  	cursor: pointer;

			  	@if $knobRounding > 0{

					border-radius: #{$knobRounding}px;
				}
			}


			&::-ms-thumb {

			    height: $sliderHeight;
			    width: $sliderWidth;
			    cursor: pointer;

			    @if $knobRounding > 0{

					border-radius: #{$knobRounding}px;
				}
			}

			// Track styling --
  			// -------------------------


			&::-moz-range-track {

			    width: 100%;
			    height: $trackHeight;
			    cursor: pointer;
			    border-radius: 5px;
			}

			&::-webkit-slider-runnable-track {

				width: 100%;
				height: $trackHeight;
				cursor: pointer;
				border-radius: 5px;
			}

			&::-ms-track {

			    width: 100%;
			    height: $trackHeight;
			    cursor: pointer;
			    background: transparent;
			    border-color: transparent;
			    color: transparent;
			}
			

			
		}
	}
}


@mixin form($rounding:5,$padding:10px 20px,$inputs : "text" "email" "password" "url" "tel" "search" "date" "time" "number") {
	

	label{

		display: block;
		margin: 0 0 10px 5px;
	}

	textarea {

		width:100%;
		max-width:100%;
		margin:0;
		outline: none;
		margin-bottom: 20px;
		padding: $padding;
		@include box-sizing(border-box);

		@if $rounding {

			border-radius : #{$rounding}px;
		}
	}

	input{
		
		@each $input in $inputs {
			&[type=#{$input}]{
				@extend textarea;
			}
		}

		&[type=radio], &[type=checkbox]{

			width:30px;
			height: 30px;
		}

		&:focus{

			outline: none;
		}

	}

	select{

		@extend textarea;
	}

	fieldset{

		width:100%;
	}

}
// -----------------------------------------
// Grid mixins
// -----------------------------------------

@mixin grid-col($ammount:3,$col-count:12,$gutter-width:2%){

	$gutter-total : ($col-count - 1) * $gutter-width;
	$remainder  : 100% - $gutter-total;
	$fill : ($ammount - 1)*$gutter-width;
	$unit : $remainder / $col-count;

	float:left;
	position:relative;
	width:$unit*$ammount+$fill;
	margin-right:$gutter-width;
}

@mixin shift($dir:"push",$ammount:3,$col-count:12,$gutter-width:2%){

	$gutter-total : ($col-count - 1) * $gutter-width;
	$remainder  : 100% - $gutter-total;
	$fill : ($ammount - 1)*$gutter-width;
	$unit : $remainder / $col-count;

	@if $dir == "push" {
		margin-left:$unit*$ammount+$fill+$gutter-width; 
	}

	@if $dir == "pull" {
		margin-right:$unit*$ammount+$fill+$gutter-width!important; 
	}
}

@mixin grid-push($ammount:3,$col-count:12,$gutter-width:2%){

	$gutter-total : ($col-count - 1) * $gutter-width;
	$remainder  : 100% - $gutter-total;
	$fill : ($ammount - 1)*$gutter-width;
	$unit : $remainder / $col-count;

	margin-left:$unit*$ammount+$fill+$gutter-width; 

}

@mixin grid-pull($ammount:3,$col-count:12,$gutter-width:2%){

	$gutter-total : ($col-count - 1) * $gutter-width;
	$remainder  : 100% - $gutter-total;
	$fill : ($ammount - 1)*$gutter-width;
	$unit : $remainder / $col-count;

	margin-right:$unit*$ammount+$fill+$gutter-width; 

}

@mixin gridClasses ($col-count:12,$gutter-width:2%,$stack-point:550px,$shift:true){

	/* =========================================*/
	/* GRID STYLES                              */
	/* =========================================*/

	.grid-row {

		min-height: 1%;

		&:after {
	        content: "";
	        display: table;
	        clear: both;
	    }
	}

	@for $i from 1 through $col-count{

		.grid-#{$i}{
			@include grid-col($i,$col-count,$gutter-width);
		}

		@if $shift {

			.push-#{$i}{
				@include shift("push",$i,$col-count,$gutter-width)
			}

			.pull-#{$i}{
				@include shift("pull",$i,$col-count,$gutter-width)
			}

		}
	}

	[class*="grid"]:last-child{
		margin-right:0;
	}

	@media screen and (max-width:$stack-point){


		[class*="grid"]{
			margin-left: 0;
			margin-right: 0;
			width: 100%;
		}
	}

	/* =========================================*/
}


@mixin gridBlockClass($bg:false){

	.grid-block{

		padding:20px;
		margin-bottom: 20px;
		@include box-sizing(border-box);
		@include border-radius(5px);

		@if $bg {

			background-color:$bg;
		}
	}
}



@mixin masonryClasses($col-count:4,$gutter-width:1em,$padding:0,$rounding:5) {

	.masonry{

		-moz-column-count: $col-count;
        -webkit-column-count: $col-count;
        column-count: $col-count;
		margin: $gutter-width 0;
	    -moz-column-gap: $gutter-width;
	    -webkit-column-gap: $gutter-width;
	    column-gap: $gutter-width;

	}

	.masonry-item{

		display: inline-block;
	    margin: 0 0 $gutter-width;
	    width: 100%;
	    overflow: hidden;

	    @if $padding > 0{

	    	padding:#{$padding}px;
	    }

	    @if $rounding > 0{

	    	@include border-radius(#{($rounding)}px);
	    }

		img{

			display: block;
			width: 100%;
		}
	}
}




@mixin afterBefore{
	display:block;
	content:"";
}

@mixin absolutly($distance:0,$axis1:top,$axis2:left){
	position:absolute;
	@if $axis1 == top{top:$distance}
	@if $axis1 == right{right:$distance}
	@if $axis1 == bottom{bottom:$distance}
	@if $axis1 == left{left:$distance}
	@if $axis2 == top{top:$distance}
	@if $axis2 == right{right:$distance}
	@if $axis2 == bottom{bottom:$distance}
	@if $axis2 == left{left:$distance}
}

@mixin boxSizing($padding){
	@include box-sizing(border-box);
	padding:$padding;
}


@mixin scrollbar ($basecol : $col-dark){

	overflow: auto ;

	&::-webkit-scrollbar {
	    width: 6px;
	    padding:10px;
	}
	 
	&::-webkit-scrollbar-track {
	    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); 
	    background: lighten($basecol,20%);
	    border-radius: 10px;
	}
	 
	&::-webkit-scrollbar-thumb {
	    border-radius: 10px;
	    background: lighten($basecol,10%);
	    border:1px solid darken($basecol,10%);
	    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); 
	}

}

@mixin circle($size:20px){

	width:$size;
	height:$size;
	@include border-radius($size);
}

@mixin arrow($size:10px,$dir:"down",$colour:white,$angle:0.7){

	width: 0; 
	height: 0;

	@if $dir == "up"{
		border-left: $size*$angle solid transparent;
		border-right: $size*$angle solid transparent;
		border-bottom: $size solid $colour;
	}

	@if $dir == "down"{
		border-left: $size*$angle solid transparent;
		border-right: $size*$angle solid transparent;	
		border-top: $size solid $colour;
	}

	@if $dir == "right"{
		border-top: $size*$angle solid transparent;
		border-bottom: $size*$angle solid transparent;	
		border-left: $size solid $colour;
	}

	@if $dir == "left"{
		border-top: $size*$angle solid transparent;
		border-bottom: $size*$angle solid transparent;
		border-right:$size solid $colour;
	}
}

@mixin bevelDivider($col:grey,$side:"bottom",$size:1px){

	$light : lighten($col,5%);
	$dark  : darken($col,5%);

	@if $side == "top" {
		@include box-shadow(inset 0 $size 0 $light, 0 (-$size) 0 $dark);
		&:first-of-type{
			@include box-shadow(none);
		}
	}

	@if $side == "bottom" {
		@include box-shadow(inset 0 (-$size) 0 $dark, 0 $size 0 $light);
		&:last-of-type{
			@include box-shadow(none);
		}
	}

	@if $side == "left" {
		@include box-shadow(inset  $size 0 0 $light, (-$size) 0 0 $dark);
		&:first-of-type{
			@include box-shadow(none);
		}
	}

	@if $side == "right" {
		@include box-shadow(inset (-$size) 0 0 $dark, $size 0 0 $light);
		&:last-of-type{
			@include box-shadow(none);
		}
	}
}

@mixin noSelect {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@charset "utf-8";


@mixin icons($path:"/css/icons/"){

	@font-face {
		font-family: 'icon-set';
		src:url('#{$path}icon-set.eot?-bp9gof');
		src:url('#{$path}icon-set.eot?#iefix-bp9gof') format('embedded-opentype'),
			url('#{$path}icon-set.ttf?-bp9gof') format('truetype'),
			url('#{$path}icon-set.woff?-bp9gof') format('woff'),
			url('#{$path}icon-set.svg?-bp9gof#icomoon') format('svg');
		font-weight: normal;
		font-style: normal;
	}

	[class^="icon-"], [class*=" icon-"] {
		font-family: 'icon-set';
		speak: none;
		font-style: normal;
		font-weight: normal;
		font-variant: normal;
		text-transform: none;
		line-height: 1;

		/* Better Font Rendering =========== */
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}


	$icon-list : "eye" "paper-clip" "mail" "toggle" "layout" "link" "bell" "lock" "unlock" "ribbon" "image" "signal" "target" "clipboard" "clock" "watch" "air-play" "camera"
		"video" "disc" "printer" "monitor" "server" "cog" "heart" "paragraph" "align-justify" "align-left" "align-center" "align-right" "book" "layers" "stack" "stack-2"
		"paper" "paper-stack" "search" "zoom-in" "zoom-out" "reply" "circle-plus" "circle-minus" "circle-check" "circle-cross" "square-plus" "square-minus" "square-check"
		"square-cross" "microphone" "record" "skip-back" "rewind" "play" "pause" "stop" "fast-forward" "skip-forward" "shuffle" "repeat" "folder" "umbrella" "moon" "thermometer"
		"drop" "sun" "cloud" "cloud-upload" "cloud-download" "upload" "download" "location" "location-2" "map" "battery" "head" "briefcase" "speech-bubble" "anchor" "globe" "box"
		"reload" "share" "marquee" "marquee-plus" "marquee-minus" "tag" "power" "command" "alt" "esc" "bar-graph" "bar-graph-2" "pie-graph" "star" "arrow-left" "arrow-right" "arrow-up"
		"arrow-down" "volume" "mute" "content-right" "content-left" "grid" "grid-2" "columns" "loader" "bag" "ban" "flag" "trash" "expand" "contract" "maximize" "minimize" "plus"
		"minus" "check" "cross" "move" "delete" "menu" "archive" "inbox" "outbox" "file" "file-add" "file-subtract" "help" "open" "ellipsis"
	;


	@for $i from 1 through length($icon-list){

		$zeroIndex : $i - 1;

		@if $zeroIndex < 100{
		
			@if $zeroIndex < 10{
				$val  : '"\\e00#{$zeroIndex}"';

				.icon-#{nth($icon-list,$i)}:before{
					content: #{$val};
				}
			}

			@if $zeroIndex > 9{
				$val  : '"\\e0#{$zeroIndex}"';

				.icon-#{nth($icon-list,$i)}:before{
					content: #{$val};
				}
			}
		}

		@if $zeroIndex > 99{
			$val  : '"\\e#{$zeroIndex}"';

			.icon-#{nth($icon-list,$i)}:before{
				content: #{$val};
			}
		}
	}

}
@mixin containerClass($maxWidth:900px,$padding:20){

	.container{

		margin: 0 auto;
		max-width: $maxWidth;
		
		@if $padding > 0{
			padding:0 #{$padding}px;
		}
	}
}

@mixin stackClass{
	
	.stack{
		
		padding:40px 0;
		min-height: 1%;

		&:after {
	        content: "";
	        display: table;
	        clear: both;
	    }
	}
}

@mixin fullScreen{

	position: relative;
	width:100%;
	height:100vh;
}

@mixin fullScreenClass{

	.fullscreen{
		position: relative;
		width:100%;
		height:100vh;
	}
}

@mixin stickyHeader($height:50px,$position:fixed){

	position: $position;
	top:0;
	height:$height;
	width:100%;
	z-index: 9999;
}

@mixin stickyHeaderClass($height:50px,$position:fixed){

	header.sticky{

		position: $position;
		top:0;
		height:$height;
		width:100%;
		z-index: 9999;
	}
	
}

@mixin paddedClass($ammount:20px){

	.padded{

		padding: $ammount;

		h1,h2,h3,h4,h5,h6,p{

			&:last-child{

				margin-bottom: 0;
			}
		}
	}
}

@mixin fitParent($all:"", $top:"", $right:"", $bottom:"", $left:""){
	position:absolute;
	@if $all != ""{
		top:$all;
		right:$all;
		bottom:$all;
		left:$all;
	} @else{
		@if $top != ""{
			top:$top;
			} @else{
			top:0;
		}

		@if $right != ""{
			right:$right;
			} @else{
			right:0;
		}

		@if $bottom != ""{
			bottom:$bottom;
			} @else{
			bottom:0;
		}

		@if $left != ""{
			left:$left;
			} @else{
			left:0;
		}
	}	
}

@mixin sideBar($width:300px,$side:"left"){

	position:absolute;
	top:0;
	bottom:0;
	width:$width;

	@if $side == "left"{
		left:0;
	}

	@if $side == "right"{
		right:0;
	}
}

@mixin sideBarAppend($width:300px,$side:"left"){

	position:absolute;
	top:0;
	bottom:0;

	@if $side == "left"{
		left:$width;
		right:0;
	}

	@if $side == "right"{
		right:$width;
		left:0;
	}
}

@mixin centre($axis: "both"){
	position:absolute;
	@if $axis == "y"{
		top:50%;
		@include translateY(-50%);
	}
	@if $axis == "x"{
		left:50%;
		@include translateX(-50%);
	}
	@if $axis == "both"{
		top:50%;
		left:50%;
		@include translate(-50%, -50%);
	}	
}

@mixin centreClasses{

	.centre{
		@include centre;
	}

	.centre-x{

		height:100%;
		@include centre(x);
	}

	.centre-y{

		width:100%;
		@include centre(y);
	}

	.text-centre{

		text-align: center;
	}
}

@mixin navigationClasses($orientation:"horizontal",$font-size:1em,$link-height:50px,$padding:20px,$rounding:5px,$align:left,$expand:false){


	@if $orientation == "horizontal"{

		nav.horizontal{

			display:inline-block;

			@if $rounding{

				//overflow: hidden;
				@include border-radius(#{$rounding});
			}

			ul{
				
				text-align: $align;

				// @if $align == left{
				// 	float:left;
				// }	

				li{

					position: relative;
					display: inline-block;

					.subnav{

						height:0;
						overflow:hidden;
						position: absolute;
						top:$link-height;
						width:300px;

						li{

							display:list-item;
						}
					}

					&:hover .subnav{

						height:auto;
					}
					
					a{
						
						font-size: $font-size;
						line-height: $link-height;
						display: block;
						padding:0 $padding;

					}
				}
			}

		}
	}

	@if $orientation == "vertical"{

		nav.vertical{

			@if $rounding{

				overflow: hidden;
				@include border-radius(#{$rounding});
			}

			ul{
				
				text-align: $align;	

				li{

					display: list-item; 

					@if $expand{

						&:hover .subnav{

							height:auto;
							padding:$padding 0;
						}
					}

					a{
						
						font-size: $font-size;
						line-height: $link-height;
						display: block;
						padding:0 $padding;

					}

					&:first-child a {

						padding-top: $padding/2;
					}

					&:last-child a {

						padding-bottom: $padding/2;
					}
				}
			}
		}
	}
}

@mixin subnav($orientation:"vertical",$indent:40px,$expand:false){
	
	@if $orientation == "vertical"{

		li a{
			
			font-size: 0.9em;
			padding-left:$indent;
		}
	}

	@if $expand{

		height: 0;
		overflow: hidden;
		@include single-transition(all,0.3s,ease);
	}
}


nav.vertical .subnav{
	@include subnav;
}
@mixin tables($padding:10px){

	table.table {

		width:100%;
	    display: table;
	    border-collapse: separate;

	    tbody {

			display: table-row-group;
			vertical-align: middle;
			border-color: inherit;
		}

		tr {

		    display: table-row;
		    vertical-align: inherit;
		    border-color: inherit;
		}

		th{

			font-weight: 600;
		}

		th, td{
			
			padding: $padding;
			line-height: 1.5;
			vertical-align: top;
			display: table-cell;
		}
	}

	
}


// Experimental
// --------------------------------------

	@function applyColour($method,$col,$amt){
		
		@if $method == "lighten"{
			@return lighten($col,$amt);
		}

		@if $method == "darken"{
			@return darken($col,$amt);
		}
	}

	@function contrast($colour){

		@return desaturate(invert($colour),100%);
	}

	@mixin themeTest($bg:#333,$method:"lighten"){


		body{

			background-color: $bg;
			color:contrast($bg)
		}

		nav {
			background-color: applyColour($method,$bg,3%)
		}

	}

	//@include themeTest;


// Experimental
// --------------------------------------



@mixin themeBase($themeColour:#e9e9e9){
	
	body{

		background-color: $themeColour;
	}
}


@mixin themeTypography($themeColour:#e9e9e9,$body:#666,$heading:#111){



	body{

		color:$body;
		font-size:1em;
		line-height: 140%;
	}

	h1,h2,h3,h4,h5,h6{

		color:$heading;
	}

	p{

		color:$body;
	}


	hr{

		display: block;
	    margin: 20px 20px 40px 20px;
	    height:0;
	    border-left:none;
	    border-right:none;
	    border-top: 1px solid darken($themeColour,20%);
		border-bottom: 1px solid lighten($themeColour,20%);
		opacity: 0.3;
	}

	mark{

		font-size: 0.8em;
		background-color: orange;
		padding:5px;
	}

}

@mixin themeLinks($link:black,$hover:$col-primary,$visited:$col-secondary){

	a{

		&:link{

			color:$link;
			text-decoration: none;
		}

		&:hover{

			color: $hover;
		}

		&:active,&:visited{

			color:darken($hover,10%);
		}
	}
}

@mixin themeForms($themeColour,$primary){

	$inputs : "text" "email" "password" "url" "tel" "search" "date" "time" "number";

	textarea{

		background-color: lighten($themeColour,5%);
		border: 1px solid darken($themeColour,10%);
		color: contrast($themeColour);

		&:hover{

			border-color: darken($themeColour,20%);;
		}

		&:focus{

			border-color: $primary;
		}
	} 

	select{

		@extend textarea;
	}

	@each $input in $inputs {
		input[type=#{$input}]{

			@extend textarea;
		}
	}
}

@mixin themeRangeInput($themeColour,$knob,$focus){
	

	input{

		&[type=range]{

  			// Thumb styling --
  			// -------------------------

  			&::-webkit-slider-thumb{
  				
  				background:$knob;
  				border: 1px solid darken($knob,20%);
  				
  			}

  			&::-moz-range-thumb {

			  	background:$knob;
			  	border: 1px solid darken($knob,20%);
			}


			&::-ms-thumb {

			    background:$knob;
			    border: 1px solid darken($knob,20%);
			}

			// Track styling --
  			// -------------------------


			&::-moz-range-track {

			    background-color: lighten($themeColour,5%);
				border: 1px solid darken($themeColour,10%);
			}

			&::-webkit-slider-runnable-track {

				background-color: lighten($themeColour,5%);
				border: 1px solid darken($themeColour,10%);
			}

			&::-ms-track {

			    background-color: lighten($themeColour,5%);
				border: 1px solid darken($themeColour,10%);
			}

			&::-ms-fill-lower {

			    background: $focus;
			    border: 1px solid darken($focus,10%);
			}

			&:focus{
				
				&::-webkit-slider-thumb{
  				
	  				background:$focus;
	  				border: 1px solid darken($focus,20%);
	  				
	  			}

	  			&::-moz-range-thumb {

				  	background:$focus;
				  	border: 1px solid darken($focus,20%);
				}


				&::-ms-thumb {

				    background:$focus;
				    border: 1px solid darken($focus,20%);
				}

				&::-moz-range-track {

					border: 1px solid $focus;
				}

				&::-webkit-slider-runnable-track {

					border: 1px solid $focus;
				}

				&::-ms-track {

					border: 1px solid $focus;
				}
			}
		}
	}
}

@mixin themePanelClass($type){

	@if $type == "dark" {

		.panel{

			background-color: #1f1f1f;
			border-color: #111;

			header, footer{

				background-color: #272727;
				border-color: #111;
			}
		}
	}

	@if $type == "light" {

		.panel{

			background-color: #e9e9e9;
			border-color: #B3B3B3;

			header, footer{

				background-color: #f3f3f3;
				border-color: #B3B3B3;
			}
		}
	}
}

@mixin themeNavigation($className:"",$bg:false,$hover:#fff,$text:#666,$borders:false){

	nav.#{$className}{
	
		@if $bg{
			background-color:$bg;
		}

		ul li a{

			color:$text;

			&:hover{

				background-color:$hover;
				color:contrast($hover);
			}
		}

		@if $bg{
			
			.subnav{
				background-color:$bg;
			}
		}

		@if $borders{

			&.horizontal{

				ul li{

					border-right:1px solid $borders;
				}
			}

			&.vertical{

				ul li{

					border-bottom:1px solid $borders;
				}
			}

			ul li:last-child{

				border:none;
			}
		}
	}
	
	// nav.vertical, nav.horizontal{

	// 	border: 1px solid #000;
	// 	background-color: #171717;

	// 	ul li{

	// 		background-color: #171717;
			
	// 		a{color:#777;}

	// 		&:hover{
				
	// 			a{color:white;}
	// 			background-color: #121212;

	// 			.subnav li {

	// 				background-color: #121212;
	// 				a{
						
	// 					color:#777;
						
	// 					&:hover{

	// 						color: white;
	// 					}
	// 				}
	// 			}
	// 		}
	// 	}
	// }

	// nav.vertical ul li{

	// 	border-bottom: 1px solid #000;

	// 	.subnav li {

	// 		border-top: 1px dashed #000;
	// 		border-bottom: none;
	// 	}

	// 	&:last-child{

	// 		border-bottom: none;
	// 	}
	// }

	// nav.horizontal ul li{

	// 	border-right: 1px solid #000;



	// 	&:last-child{

	// 		border-right: none;
	// 	}
	// }

}

@mixin themeStack($themeColour){

	.stack{

		display: block;
		background-color:$themeColour;
		border-bottom:1px  solid darken($themeColour,7%);

		&:nth-child(even){

			background-color: darken($themeColour,2%);
		}

	}

}

@mixin themeTables($themeColour){
	
	table.table{

		td{

			border-top: 1px solid darken($themeColour,10%);
		}

		th{

			color: contrast($themeColour);
		}

		tbody tr{

			&:nth-child(odd){
				background-color: lighten($themeColour,2%);
			}
		}
	}
}

@mixin themeCardClass($blockColour:#f4f4f4,$borderColour:#c9c9c9,$headerStyle:false){

	.card{
		
		background-color: $blockColour;
		border: 1px solid $borderColour;

		header{

			background-color:lighten($borderColour,10%);
			border-bottom: 1px solid $borderColour;

			@if $headerStyle{

				h1,h2,h3,h4,h5,h6{

					padding-left:10px;
					border-left: 3px solid $headerStyle
				}
			}
		}

		footer{

			background-color:lighten($borderColour,10%);
			border-top: 1px solid $borderColour;

			a{

				border-right: 1px solid $borderColour;
			}
		}
	}
}

@mixin theme($type:"dark",$themeColour:#222){

	@include themeTypography($type);
	@include themeForms($themeColour,$col-primary);
	@include themePanelClass($type);
	@include themeNavigation($type);
	@include stackTheme($type);
	@include themeTables($themeColour);
	

	@if $type == "dark" {

		header.sticky{

			background-color: #111;
			color:#eee;
		}

		.grid-block, .masonry-item{
			
			background-color: #252525;
			border: 1px solid #111;
		}

		hr{

			display: block;
		    margin: 20px 20px 40px 20px;
		    height:0;
		    border-left:none;
		    border-right:none;
		    border-top: 1px solid #000;
	    	border-bottom: 1px solid #333;
		}
	}

	@if $type == "light" {

		header.sticky{

			background-color: #111;
			color:#eee;
		}

		.grid-block, .masonry-item{
			
			background-color: #fff;
			border: 1px solid #ddd;
		}

		hr{
			
			display: block;
		    margin: 20px 20px 40px 20px;
		    height:0;
		    border-left:none;
		    border-right:none;
		    border-top: 1px solid #ddd;
	    	border-bottom: 1px solid #fff;
		}
	}

}




@mixin animation($name, $timingFunction:ease, $duration:1s,$stagger:"",$delay:"", $count:""){
	-webkit-animation-name: $name;
	animation-name: $name;	
	-webkit-animation-fill-mode: both;
	animation-fill-mode: both;
	-webkit-animation-timing-function:$timingFunction;
	animation-timing-function:$timingFunction;
	-webkit-animation-duration: $duration;
	animation-duration: $duration;	
	@if $count != ""{
		-webkit-animation-iteration-count: $count;
		animation-iteration-count: $count;
	}
	@if $stagger != ""{
		@if $delay == ""{
			$delay:0.1s;
		}
		@for $i from 1 through $stagger {
		    &:nth-child(#{$i}) {
		    	-webkit-animation-delay: $delay * $i;
		        animation-delay: $delay * $i;
		    }
		}
	} @else {
		@if $delay != ""{
			-webkit-animation-delay: $delay;
			animation-delay: $delay;
		}
	}
}


@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

@mixin stops($vendor,$stopsObj,$opFade){

	@each $stop,$val in $stopsObj{
	
		#{$stop}{

			@if $opFade == "fadeIn"{
				@if $stop == 0%{opacity:0}
				@if $stop == 100%{opacity:1}
			}
			#{$vendor}transform:#{$val};
		}
	}
}

@mixin transformKeyframes ($animationName,$stopsObj:"",$opFade:false){

	@-webkit-keyframes #{$animationName} {
    	@include stops(-webkit-,$stopsObj,$opFade)
    }
    @-moz-keyframes #{$animationName} {
      	@include stops(-moz-,$stopsObj,$opFade)
    }
    @-o-keyframes #{$animationName} {
      	@include stops(-o-,$stopsObj,$opFade)
    }
    @keyframes #{$animationName} {
     	@include stops("",$stopsObj,$opFade)
    }
}


@mixin fadeIn {

	.fade-in{

		@include animation(fadeIn,ease,0.8s,5,0.08s);
	}

	$fadeIn-stops : (
		0% : "scale(0.7)",
		100% : "scale(1)"
	);

	@include transformKeyframes(fadeIn,$fadeIn-stops,"fadeIn");
}


@mixin pulse {

	.pulse{

		@include animation(pulse,ease,3s,"","",infinite);
	}

	$pulse-stops : (
		0% : "scale(1)",
		87% : "scale(1)",
		90% : "scale(0.8)",
		93% : "scale(1)",
		100% : "scale(1)"
	);

	@include transformKeyframes(pulse,$pulse-stops);
}


//Adds a gradient text effect - WEBKIT ONLY!!!
@mixin gradientText($top:#fcfcfc,$bottom:#828282){
	color:$top;
	background: -webkit-linear-gradient($top,$bottom);
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;	
}

//For css3 text columns supported by IE10+
@mixin columnText($cols:3,$gap:40px,$breakpoint:550px,$rules:true){

    $vendors : "-webkit-" "-moz-" "";

    .columns{

        @each $vendor in $vendors {

            #{$vendor}column-count : $cols;
            #{$vendor}column-gap : $gap;
            @if $rules {
                #{$vendor}column-rule: 1px outset rgba(0,0,0,0.2);
            }
        }

        @media screen and (max-width:$breakpoint){

            @each $vendor in $vendors {

                #{$vendor}column-count : 1;
                #{$vendor}column-gap : 0;
                @if $rules {
                    #{$vendor}column-rule:none;
                }


            }
        }

    }
}
// -----------------------------------------
// Core common mixins
// -----------------------------------------

@mixin core($config){

	$stack       : map-get($config,stack);
	$container   : map-get($config,container);
	$rounded     : map-get($config,rounded);
	$border-box  : map-get($config,borderBox);
	$transitions : map-get($config,transitions);
	$fitParent   : map-get($config,fitParent);
	$centre      : map-get($config,centre);
	$fadeIn      : map-get($config,fadeIn);

	/* =========================================*/
	/* CORE GLOBALS                             */
	/* =========================================*/

	@if $container {

		.container{

			margin:0 auto;
			max-width:$container;
		}
	}

	@if $stack {

		.stack{
			@include stack;
		}
	}

	@if $rounded{

		@for $i from 1 through length($rounded) {
			
			$ammount : nth($rounded,$i);

			.rounded-#{$ammount}{
				@include border-radius($ammount);
			}

		}

	}

	@if $border-box {

		.border-box{
			@include box-sizing(border-box);
		}
	}

	@if $transitions{

		@for $i from 1 through length($transitions) {
			
			$transition : nth($transitions,$i);

			.transition-#{$i}{
				@include single-transition(all,$transition,ease)
			}

		}
	}

	@if $fitParent{

		.fitParent{
			@include fitParent;
		}
	}

	@if $centre{

		.centre{
			@include centre;
		}

		.centre-x{
			@include centre(x);
		}

		.centre-y{
			@include centre(y);
		}
	}

	@if $fadeIn{

		.fadeIn{
			@include animation(fadeIn,ease,0.5s,5,0.2s)
		}
	}

	/* =========================================*/
}

